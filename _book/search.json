[
  {
    "objectID": "basics.html#çalışma-dizini",
    "href": "basics.html#çalışma-dizini",
    "title": "1  Temel Fonksiyonlar",
    "section": "1.1 Çalışma Dizini",
    "text": "1.1 Çalışma Dizini\nÇalışma Dizini, üzerinde çalıştığınız veri kümeleri vb. gibi tüm gerekli dosya ve belgelerinizi içeren yerdir. Çalışma dizininizi ayarlamanın iki yolu vardır. İlk yol getwd ve setwd işlevlerini kullanmaktır. Diğer yol ise RStudio üzerinden Session&gt;Set Working Directory youluyla yapılabilir.\n\ngetwd()\n\n[1] \"D:/Akademi ve Veri Bilimi/Data Science/Github/r-book-tr\"\n\n\n\ndir veya list.files komutları ile dizinde yer alan dosyalar öğrenilebilir.\ndir.create komutu ile yeni bir klasör oluşturmak mümkündür.\nfile.exists kullanılarak klasörün var olup olmadığı sorgulanabilir."
  },
  {
    "objectID": "basics.html#yardımcı-bilgiler",
    "href": "basics.html#yardımcı-bilgiler",
    "title": "1  Temel Fonksiyonlar",
    "section": "1.2 Yardımcı Bilgiler",
    "text": "1.2 Yardımcı Bilgiler\nR komutlarında Büyük-küçük harf duyarlılığı (case sensitive) vardır.\n\na &lt;- 5  \nprint(a)  \n\n[1] 5\n\nA &lt;- 6  \nprint(A) \n\n[1] 6\n\n\nNoktalı virgül (;) işareti ile aynı satırda birden fazla kod çalıştırılabilir hale getirilir.\n\nx &lt;- 1 ; y &lt;- 2 ; z &lt;- 3  \nx; y; z\n\n[1] 1\n\n\n[1] 2\n\n\n[1] 3\n\n\nKomutlar arası açıklamaları ve yorumları #(hashtag) ile yazabiliriz. Hastagli satırlar, kod olarak algılanıp çalıştırılmaz. Bu kısımlara yazılan kodlar ile ilgili hatırlatıcı bilgiler (comment) yazılabilir.\n\n#6 ile başyalan ve  10 ile  biten tamsayıları c vektörüne atayalım  \nc &lt;- 6:10 \nc\n\n[1]  6  7  8  9 10\n\n\n\nls() çalışma alanındaki nesne ve fonksiyonları listeler.\nrm(a) çalışma alanından a nesnesini siler.\nrm(list=ls()) bütün çalışma alanını temizler.\nq() R’dan çıkış yapmayı sağlar.\ninstall.packages(\"package\") paket yüklemeyi sağlar.\nlibrary(\"package\") yüklü olan paketi getirir.\ninstalled.packages() yüklü olan paketleri listeler\noptions(digits=10) sayılarda ondalık kısmın basamak sayısını ifade eder.\nhelp() fonksiyonu ya da ? ile bir fonksiyon hakkında yardım alınabilir. Örneğin mean fonksiyonu ile ilgili yardım almak için scripte ?mean ya da help(mean) yazmanız ve çalıştırmanız yeterlidir. Bunun yanı sıra R Studio penceresinin sağ alt kısmındaki help alanını kullanabilirsiniz."
  },
  {
    "objectID": "basics.html#atama-operatörü",
    "href": "basics.html#atama-operatörü",
    "title": "1  Temel Fonksiyonlar",
    "section": "1.3 Atama Operatörü",
    "text": "1.3 Atama Operatörü\nBir değişkene, tabloya veya objeye değer atarken ‘&lt;-’ veya ‘=’ operatörü kullanılır. ‘&lt;-’ atama operatöründe ok hangi yöndeyse o tarafa atama yapılır. Genellikle ‘&lt;-’ operatörü kullanılmaktadır. Çünkü ‘=’ operatörü filtrelemelerde veya işlemlerdeki ‘==’ ile karıştırılabilmektedir. Ayrıca fonksiyonlar içinde de kullanılabildiği için kod karmaşasına sebebiyet verebilir. Her iki operatör de aynı işlevi görmektedir.\n\n# a'ya 20 değerini atayalım  \na &lt;- 20    \n# tabloyu ya da değeri görüntülemek için nesnenin kendisi de direkt yazılabilir.  \n# ya da print fonksiyonu kullanılabilir.   \nprint(a)    \n\n[1] 20\n\n# b'ye 12 değerini atayalım  \nb &lt;- 12  \nprint(b)   \n\n[1] 12\n\n# a ve b değerlerinden üretilen bir c değeri üretelim.   \nc &lt;- 2 * a + 3 * b  \nprint(c) \n\n[1] 76\n\n\nc() ile vektör oluştutulabilir. c “combine” (birleştirmek) kelimesinin ilk harfini ifade eder. Bir değişkene birden fazla değer atamak istediğimizde kullanılır.\n\n# d adında bir vektör oluşturalım ve değerler atayalım.   \nd &lt;- c(4,7,13)  \nd \n\n[1]  4  7 13\n\n\nBir metini değişkene atamak istersek de aşağıdaki gibi metin “” işareti içine yazılmalıdır.\n\nmetin &lt;- \"Merhaba Arkadaşlar\"  \nprint(metin)\n\n[1] \"Merhaba Arkadaşlar\""
  },
  {
    "objectID": "basics.html#matematiksel-operatörler",
    "href": "basics.html#matematiksel-operatörler",
    "title": "1  Temel Fonksiyonlar",
    "section": "1.4 Matematiksel Operatörler",
    "text": "1.4 Matematiksel Operatörler\nR ve R Studio, güçlü bir hesap makinesi olarak kabul edilebilir.\n\n3+5 \n\n[1] 8\n\n7*8 \n\n[1] 56\n\n88/2 \n\n[1] 44\n\n3*(12+(15/3-2)) \n\n[1] 45\n\n9^2 # karesini alır \n\n[1] 81\n\na &lt;-  3 \nb &lt;-  a^2 \nprint(b) \n\n[1] 9\n\nlog(15) #ln15 yani doğal logaritma \n\n[1] 2.70805\n\nlog10(1000) # 10 tabanına göre hesaplama \n\n[1] 3\n\nexp(12) #exponential power of the number. e (2.718) üzeri 12 \n\n[1] 162754.8\n\nfactorial(6) # faktöriyel hesaplama yapar \n\n[1] 720\n\nsqrt(81) # karekök alma \n\n[1] 9\n\nabs(-3) # mutlak değer \n\n[1] 3\n\nsign(-5) # işaret bulma \n\n[1] -1\n\nsin(45) # sinüs \n\n[1] 0.8509035\n\ncos(90) # cosinüs \n\n[1] -0.4480736\n\npi # pi sayısı \n\n[1] 3.141593\n\ntan(pi) # tanjant\n\n[1] -1.224647e-16"
  },
  {
    "objectID": "basics.html#mantıksal-operatörler",
    "href": "basics.html#mantıksal-operatörler",
    "title": "1  Temel Fonksiyonlar",
    "section": "1.5 Mantıksal Operatörler",
    "text": "1.5 Mantıksal Operatörler\nMantıksal sorgulamalar, koşullarda ve filtrelerde kullanılmaktadır. Verilen koşul veya filtre sağlandığında TRUE, sağlanmadığında ise FALSE değerleri elde edilmektedir. Bu mantıksal operatörler ayrıca komutlar içindeki özellikleri aktifleştirmek ve pasifleştirmek için de kullanılmaktadır.\nMantıksal operatörler aşağıdaki şekilde kullanılmaktadır:\n\neşittir : ==\neşit değildir : !=\nküçüktür : &lt;\nküçük eşittir : &lt;=\nbüyüktür : &gt;\nbüyük eşittir : &gt;=\nx değil : !x\nx ve y : x&y\nx veya y: x|y\n\n\n3 &gt; 5\n\n[1] FALSE\n\n# & (ve) operatörü\n# iki durumda TRUE ise sonuç TRUE döner.\n3 &lt; 5 & 8 &gt; 7\n\n[1] TRUE\n\n# bir durum FALSE diğer durum TRUE ise sonuç FALSE döner.\n3 &lt; 5 & 6 &gt; 7\n\n[1] FALSE\n\n# iki durumda FALSE ise sonuç FALSE döner.\n6 &lt; 5 & 6 &gt; 7\n\n[1] FALSE\n\n# | (veya) operatörü\n# Her iki durumdan birisi TRUE ise TRUE döner\n(5==4) | (3!=4)\n\n[1] TRUE"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R Programlama",
    "section": "",
    "text": "Önsöz\nR programlama dili, veri bilimi dünyasında vazgeçilmez bir araç haline geldi. Bu kitap, veri manipülasyonundan görselleştirmeye, keşifçi veri analizinden temel istatistik konularına kadar geniş bir yelpazede R dilini kullanarak veri analizi becerilerinizi güçlendirmenize odaklanıyor.\nKitabımız, R programlama dilini temel seviyeden başlayarak adım adım öğrenmek isteyen herkes için tasarlandı. İlk bölümlerde R dilinin temellerini kavrayacak ve dplyr gibi güçlü paketler aracılığıyla veri manipülasyonunun inceliklerini keşfedeceksiniz. Veri analizinin görselleştirme aşamasında ggplot2 paketiyle nasıl etkileyici grafikler oluşturabileceğinizi adım adım öğrenecek ve veri setlerinizin hikayesini çarpıcı görsellerle anlatacaksınız.\nKitabımız, keşifçi veri analizi sürecinde size rehberlik ederken, veri işleme tekniklerini ve önemli istatistik kavramlarını pratik örneklerle ele alacak. Temel istatistik kolları üzerine odaklanarak, veri setlerinizdeki deseni anlamak ve çözümlemek için gerekli araçları edineceksiniz. Ayrıca doğrusal regresyon gibi önemli modelleme tekniklerini R dilinde nasıl uygulayabileceğinizi adım adım öğreneceksiniz.\nBu kitabın amacı, R programlama dilini veri analizi süreçlerinizde güvenle kullanmanıza yardımcı olmak ve veri odaklı kararlar almanızı desteklemektir. Bilgi birikiminizi genişletirken öğrendiklerinizi uygulamaya dökme şansına sahip olacaksınız. Umarım bu kitap, veri analizi yolculuğunuzda size rehberlik eder ve R dilini kullanarak veriyle olan etkileşiminizi daha da derinleştirir."
  },
  {
    "objectID": "r_about.html#r-programı-ile-neler-yapılabilir",
    "href": "r_about.html#r-programı-ile-neler-yapılabilir",
    "title": "R Programlama Hakkında",
    "section": "R Programı ile Neler Yapılabilir",
    "text": "R Programı ile Neler Yapılabilir\nR, açık kaynaklı bir programlama dili ve yazılım ortamıdır, bu da onu geniş bir kullanıcı topluluğu tarafından desteklenen ve geliştirilen bir platform yapar. R ile yapılabilecek başlıca işler şunlardır:\n\nVeri Analizi: R, veri çerçeveleri ve veri setleri üzerinde işlem yapmak için bir dizi fonksiyon ve araç sunar. Veri temizleme, dönüştürme, özeti alma ve analiz etme işlemleri R ile kolayca gerçekleştirilebilir.\nVeri Görselleştirme: R, ggplot2 gibi grafik paketleri ile verilerinizi görselleştirmenize olanak tanır. Çeşitli grafik türleri (çizgi grafikleri, sütun grafikleri, dağılım grafikleri vb.) oluşturabilirsiniz.\nİstatistiksel Analiz: R, istatistiksel modelleri oluşturmak, hipotez testleri yapmak ve regresyon analizi gibi istatistiksel analizler gerçekleştirmek için zengin bir araç seti sunar. Ayrıca zaman serisi analizi ve kümeleme gibi konularda da kullanılır.\nVeri Madenciliği: R, veri madenciliği uygulamaları için kullanılabilir. Makine öğrenimi algoritmaları uygulamak ve veri madenciliği projeleri geliştirmek için paketler içerir.\nRaporlama: R Markdown kullanarak veri analizi ve sonuçlarını raporlama için kullanılır. Bu, anlamlı ve formatlı raporlar oluşturmanıza yardımcı olur.\nPaketler ve Genişletilebilirlik: R, kullanıcıların işlevselliği genişletmek için paketler ekleyebileceği bir sistem sunar. CRAN (Comprehensive R Archive Network) gibi kaynaklar, binlerce paketi içeren bir depo sağlar.\n\n\n\n\n\n\n\nNot\n\n\n\nR programlama özellikle istatistik, veri bilimi ve akademik araştırmalar alanlarında çok kullanılır, ancak endüstriyel uygulamalarda da giderek daha fazla kullanılmaktadır. R’nin açık kaynaklı olması ve geniş bir kullanıcı topluluğuna sahip olması, bu dilin popülerliğini artırmıştır. R ile çalışmak için temel programlama bilgisine sahip olmak yararlı olacaktır, ancak öğrenmesi oldukça erişilebilir bir dildir ve çevrimiçi kaynaklar ve kurslar mevcuttur."
  },
  {
    "objectID": "r_about.html#r-programlama-ile-ilgili-faydalı-kaynaklar",
    "href": "r_about.html#r-programlama-ile-ilgili-faydalı-kaynaklar",
    "title": "R Programlama Hakkında",
    "section": "R Programlama ile ilgili Faydalı Kaynaklar",
    "text": "R Programlama ile ilgili Faydalı Kaynaklar\nR programlamayı öğrenmek ve geliştirmek için bir dizi faydalı kaynak bulunmaktadır. R programlamaya başlamak veya ilerlemek için kullanabileceğiniz bazı kaynaklar:\n\nResmi R Web Sitesi: R’nin resmi web sitesi (https://www.r-project.org/) R programlamaya başlamak için temel kaynaktır. Burada R’nin indirilmesi, kurulumu ve temel belgelendirme bilgilerine erişebilirsiniz.\nRStudio: R programlama için yaygın olarak kullanılan RStudio IDE’si (Entegre Geliştirme Ortamı), R kodlarını yazmak, çalıştırmak ve yönetmek için güçlü bir araçtır. RStudio’nun resmi web sitesi (https://www.rstudio.com/) RStudio’nun indirilmesi ve kullanımı hakkında bilgi sunar.\nR Dersleri ve Kurslar: İnternette birçok ücretsiz R dersi ve kursu bulabilirsiniz. Coursera, edX, Udemy ve DataCamp gibi platformlar, R programlamayı öğrenmek için çeşitli kurslar sunmaktadır.\nR Belgeleri: R’nin resmi belgeleme (https://cran.r-project.org/manuals.html) kaynakları, R dilinin temellerini ve paketlerini öğrenmek için çok faydalıdır. R’deki komutlar ve fonksiyonlar hakkında ayrıntılı bilgi içerirler.\nKitaplar: R programlamayı öğrenmek için yazılmış birçok kitap bulunmaktadır. Örnek olarak, “R Graphics Cookbook” (Hadley Wickham), “R for Data Science” (Hadley Wickham ve Garrett Grolemund), “Advanced R” (Hadley Wickham) gibi kitaplar önerilebilir.\nStack Overflow: Programlama sorunları ve hatalarıyla karşılaştığınızda, Stack Overflow gibi forumlarda R ile ilgili sorular sormak ve cevaplamak için topluluktan yardım alabilirsiniz.\nGitHub: R ile ilgili açık kaynaklı projeleri incelemek ve kendi projelerinizi paylaşmak için GitHub gibi platformları kullanabilirsiniz. GitHub’da R kodlarını içeren birçok depo bulunmaktadır.\nBloglar ve Videolar: R ile ilgili bloglar ve YouTube kanalları, öğrenmek ve güncel kalmak için harika kaynaklardır. RStudio Blog (https://blog.rstudio.com/) ve YouTube’da R ile ilgili videoları bulabileceğiniz RStudio’nun resmi kanalı bunlara örnektir.\n\n\n\n\n\n\n\nTavsiye\n\n\n\nR programlamayı öğrenmek ve geliştirmek için sürekli olarak yeni kaynaklar ve materyaller üretilmektedir. İhtiyacınıza ve seviyenize uygun kaynakları seçmek için zaman ayırın ve kendi hızınıza göre öğrenmeye devam edin."
  },
  {
    "objectID": "r_about.html#r-ve-rstudionun-bilgisayara-kurulması",
    "href": "r_about.html#r-ve-rstudionun-bilgisayara-kurulması",
    "title": "R Programlama Hakkında",
    "section": "R ve RStudio’nun Bilgisayara Kurulması",
    "text": "R ve RStudio’nun Bilgisayara Kurulması\nR’ın internet sitesinden işletim sisteminize uygun programı indirip kurabilirsiniz. Linux, Mac OS ve Windows işletim sistemleri için sürümleri mevcuttur.\nWindows İşletim Sistemi İçin R Kurulumu\n\nR programını indirmek için R resmi web sitesini ziyaret edin: https://cran.r-project.org/\nSayfanın üst kısmında “Download R for Windows” başlığını bulun ve tıklayın.\n\nİndirilen sayfada “base” sekmesine tıklayın.\n\nAçılan sayfada “Download R 4.3.1 for Windows” linkine tıklayın ve dosyayı indirin.\n\n\n\n\n\n\n\nDikkat\n\n\n\nSayfayı ziyaret ettiğiniz tarihlerde farklı sürümlerin olabileceğine dikkat edin. Örneğin ileri bir tarihte bu sayfayı ziyaret ettiğinizde R programının yeni sürümü ile karşılabilirsiniz. O yüzden sürüm bilgisi değişkenlik gösterebilir.\n\n\nİndirilen dosyayı çift tıklayarak çalıştırın ve yükleyiciyi başlatın.\nYükleyici, R’nin temel sürümünü yüklemek için sizi yönlendirecektir. Varsayılan ayarları genellikle kabul edebilirsiniz.\nKurulum tamamlandığında, R’yi çalıştırmak için masaüstünüzde veya Başlat menüsünde “R” simgesini bulabilirsiniz.\n\nWindows İşletim Sistemi İçin R Studio Kurulumu\nR editörü grafiksel bir arayüz olmayıp eski tip bir yazılım konsoludur. R Studio, R programlama dili için geliştirilmiş entegre bir geliştirme ortamı (IDE) ve arayüzüdür. R Studio, R kodlarını daha verimli bir şekilde yazmanıza, çalıştırmanıza ve yönetmenize olanak tanıyan daha modern ve kullanışlı bir arayüz sunmaktadır. Ayrıca veri analizi, görselleştirme ve raporlama işlemleri için güçlü bir platform sunar. R Studio, açık kaynak bir projedir ve ücretsiz olarak kullanılabilir.\nR Studio’nun kurulumu aşağıdaki adımlarla gerçekleştirilebilir:\n\nR Studio’nun en son sürümünü indirmek için aşağıdaki bağlantıyı kullanın: https://www.rstudio.com/products/rstudio/download/\nSayfada “Download RStudio Desktop for Windows” kısmına tıklayın ve indirmeyi başlatın.\n\nİndirilen dosyayı çift tıklayarak çalıştırın ve kurulumu başlatın. Kurulum sırasında varsayılan ayarları genellikle kabul edebilirsiniz.\nKurulum tamamlandığında, R Studio’yu başlatmak için masaüstünüzde veya Başlat menüsünde “RStudio” simgesini bulabilirsiniz."
  },
  {
    "objectID": "r_about.html#r-studio-kişiselleştirme",
    "href": "r_about.html#r-studio-kişiselleştirme",
    "title": "R Programlama Hakkında",
    "section": "R Studio Kişiselleştirme",
    "text": "R Studio Kişiselleştirme\n\nRStudio, kullanıcıların ihtiyaçlarına göre kişiselleştirilebilen bir entegre geliştirme ortamı (IDE) sunar. RStudio’yu kişiselleştirmek için aşağıdaki yolları kullanabilirsiniz:\n\nR Studio Arayüzündeki Alanları Değiştirme: Resimde görüldüğü gibi yeni bir R Script açıldığı takdirde arayüzde 4 farklı alan görülmektedir. Bu alanlar isteğe göre yer değiştirilebilmektedir. Bunun için “Tools” (Araçlar) menüsünden “Global Options” (Genel Ayarlar) sekmesi açılır. Buradan “Pane Layout” kısmından istenilen ayarlar yapılabilir.\nTemayı ve Editör Stilini Değiştirme: RStudio’nun görünümünü değiştirmek için birçok tema ve editör stilini seçebilirsiniz. Bu, yazılım geliştirme ortamınızın daha hoş veya kullanışlı olmasını sağlar. “Tools” (Araçlar) menüsünden “Global Options” (Genel Ayarlar) sekmesini seçerek bu ayarları değiştirebilirsiniz.\nKlavye Kısayollarını Kişiselleştirme: RStudio’da kullanılan klavye kısayollarını özelleştirebilirsiniz. “Tools” (Araçlar) menüsünden “Modify Keyboard Shortcuts” (Klavye Kısayollarını Düzenle) seçeneğini kullanarak klavye kısayollarını tanımlayabilir veya değiştirebilirsiniz.\nEklentileri ve Paketleri Kullanma: RStudio, kullanıcıların işlevselliği genişletmek için eklentileri ve R paketlerini kullanmalarını sağlar. Bu paketler, kod otomatik tamamlama, kod görselleştirme, proje yönetimi gibi birçok işlemi kolaylaştırabilir. R Studio’nun sol üst köşesindeki “Tools” (Araçlar) menüsünden “Install Packages” (Paketleri Yükle) seçeneği ile yeni paketleri yükleyebilirsiniz.\nR Markdown Belgelerini Özelleştirme: R Markdown belgeleri, raporlar ve belgeler oluşturmak için kullanılır. Bu belgeleri kişiselleştirebilirsiniz. R Markdown belgelerinin başlık, stil, tablo düzeni ve grafikler gibi birçok yönünü özelleştirebilirsiniz.\nProje Ayarlarını Yapılandırma: RStudio’da projeler kullanmak, projelerinizi daha düzenli ve etkili bir şekilde yönetmenize yardımcı olabilir. “File” (Dosya) menüsünden “New Project” (Yeni Proje) seçeneği ile yeni projeler oluşturabilir ve projelerinizi kişiselleştirebilirsiniz.\nKod Tarayıcı ve Çalışma Ortamını Özelleştirme: RStudio’nun sağ tarafında bulunan “Environment” (Çalışma Ortamı) ve “Files” (Dosyalar) sekmelerini özelleştirebilirsiniz. Bu sekmeleri dilediğiniz gibi düzenleyebilirsiniz.\nAddins Kullanma: RStudio’nun “Addins” (Eklentiler) menüsü, kullanıcıların özel işlevleri ekleyebileceği bir bölümdür. Bu sayede belirli işlemleri hızlıca gerçekleştirebilirsiniz.\n\nRStudio’nun bu kişiselleştirme seçenekleri, kullanıcıların kendi ihtiyaçlarına ve tercihlerine göre IDE’yi özelleştirmelerine olanak tanır. Bu şekilde, RStudio’yu daha verimli ve kişiselleştirilmiş bir şekilde kullanabilirsiniz. RStudio’nun ana bileşenleri ve temel özellikleri ise şunlardır:\n\nScript Editörü: RStudio’nun sol üst kısmında yer alan bu bölüm, R kodlarını yazmak, düzenlemek ve çalıştırmak için kullanılır. Renk vurguları, otomatik tamamlama ve hata işaretleme gibi birçok yazılım geliştirme özelliği içerir.\nEnvironment (Çalışma Ortamı) : Sağ üst köşede bulunan “Çalışma Ortamı” sekmesi, çalışan nesneleri ve değişkenleri görüntülemenizi sağlar. “Files” sekmesi ise projenizdeki dosyaları ve klasörleri görüntülemenize yardımcı olur.\nConsole: Alt sol köşede bulunan bu bölüm, R kodlarını anlık olarak çalıştırmanıza ve sonuçları görmesinize olanak tanır. R komutlarını doğrudan konsola yazabilir ve çalıştırabilirsiniz.\nDiğer Sekmeler : RStudio, çeşitli grafikler ve görselleştirmeler oluşturmanıza olanak tanır. R koduyla çizilen grafikler, “Plots” sekmesinde görüntülenir. Bunu yanısıra “Help” kısmında fonksiyonlar ile ilgili bilgi alınabilir,”Packages” kısmından ise paket yükleme vb. işler yapılabilir."
  },
  {
    "objectID": "strings.html",
    "href": "strings.html",
    "title": "6  Metin İşlemleri",
    "section": "",
    "text": "R’de bir çift tek tırnak veya çift tırnak içine yazılan herhangi bir değer, bir karakter olarak kabul edilir. Karakter yapısına sahip olan verilerin analizi özellikle metin madenciliği konusunda kullanışlıdır. Karakter nesneleri üzerinde çalışmak için kullanılabilecek birçok fonksiyon vardır.\n\n# as.character\nas.character(3.14)\n\n[1] \"3.14\"\n\nclass(as.character(3.14))\n\n[1] \"character\"\n\n# paste and paste0 karakter verilerini birleştirir\n\nfirst &lt;- \"Fatih\"\nlast &lt;- \"Tüzen\"\npaste(first,last) # default olarak arada boşluk bırakır\n\n[1] \"Fatih Tüzen\"\n\npaste0(first,last) # default olarak arada boşluk yoktur\n\n[1] \"FatihTüzen\"\n\npaste(\"R\",\"Python\",\"SPSS\",sep = \"-\")\n\n[1] \"R-Python-SPSS\"\n\n# grep fonksiyonu metin vektörünün içinde belirli bir deseni arar\n\nx &lt;- c(\"R programı\",\"program\",\"istatistik\",\"programlama dili\",\"bilgisayar\",\"matematik\")\ngrep(\"program\",x)\n\n[1] 1 2 4\n\ngrep(\"^ist\",x) # ist ile başlayan ifdelerin olduğu yerler\n\n[1] 3\n\ngrep(\"tik$\",x) # tik ile biten ifdelerin olduğu yerler\n\n[1] 3 6\n\n# grepl TRUE-FALSE olarak sonuç döndürür\ngrepl(\"tik$\",x) # tik ile biten ifdelerin olduğu yerler\n\n[1] FALSE FALSE  TRUE FALSE FALSE  TRUE\n\nx[grep(\"tik$\",x)] # tik ile biten ifdelerin olduğu yerler\n\n[1] \"istatistik\" \"matematik\" \n\nx[grepl(\"tik$\",x)] # tik ile biten ifdelerin olduğu yerler\n\n[1] \"istatistik\" \"matematik\" \n\n# nchar karakter uzunluğunu verir\nnchar(x)\n\n[1] 10  7 10 16 10  9\n\nnchar(\"R Programlama\") # boşluklar da sayılır!\n\n[1] 13\n\n# tolower ve toupper \ntoupper(\"program\") # karakteri büyük harf yapar\n\n[1] \"PROGRAM\"\n\ntolower(c(\"SPSS\",\"R\",\"PYTHON\")) # karakteri küçük harf yapar\n\n[1] \"spss\"   \"r\"      \"python\"\n\n# substr ve substring ile karakter parçalama yapılır\nsubstr(\"123456789\",start = 3, stop = 6)\n\n[1] \"3456\"\n\nsubstring(\"123456789\", first =3, last = 6)\n\n[1] \"3456\"\n\nx &lt;- \"R Programlama\"\nsubstr(x,nchar(x)-3,nchar(x)) # son 4 karakteri getir\n\n[1] \"lama\"\n\n# strsplit karakteri bölme işini yapar\nstrsplit(\"Ankara;İstanbul;İzmir\",split = \";\")\n\n[[1]]\n[1] \"Ankara\"   \"İstanbul\" \"İzmir\""
  },
  {
    "objectID": "data_types.html#veri-tipleri",
    "href": "data_types.html#veri-tipleri",
    "title": "2  Veri Tipleri ve Yapıları",
    "section": "2.1 Veri Tipleri",
    "text": "2.1 Veri Tipleri\nR’da kulllanılan 5 temel veri tipi vardır. Bu veri tipleri atomic vectörler olarak da bilinir. Atomic olması vektörlerin homojen olması anlamına gelmektedir. Yani vektör içerisinde aynı veri tipinden değerler yer alabilir. Veri tipleri;\n\nnumeric veya double (reel sayılar)\ninteger (tamsayılar)\ncomplex (karmaşık sayılar)\ncharacter (metinsel ifadeler)\nlogical, TRUE ve FALSE (mantıksal)\n\ntypeof() veya class() fonksiyonları ile veri tipi öğrenilebilir.\n\n\n\n\n\n\nÖnemli\n\n\n\ntypeof() ve class() fonksiyonları, R programlama dilinde nesnelerin özelliklerini sorgulamak için kullanılır. Farklı amaçlara hizmet ederler ve bazı durumlarda farklı sonuçlar üretebilirler.\n\ntypeof() fonksiyonu, bir nesnenin temel veri türünü belirler. Örneğin, bir nesnenin karakter dizisi (string), sayı, liste, fonksiyon veya vektör gibi temel veri türlerinden hangisine ait olduğunu gösterir. Ancak, nesnenin özel sınıfını (class) ifade etmez. Örneğin, bir faktörün typeof() değeri “integer” olabilir.\nclass() fonksiyonu ise bir nesnenin özel sınıfını belirtir. Eğer bir nesne özel bir sınıfa aitse (örneğin, bir veri çerçevesi veya faktör), class() fonksiyonu bu özel sınıfın adını verir. Eğer nesne birden fazla sınıfa aitse, sınıflar bir sıra halinde listelenir.\n\nBu fonksiyonlar genellikle birlikte kullanılır çünkü bir nesnenin veri tipi ve sınıfı arasında farklılıklar olabilir. Örneğin, bir veri çerçevesi typeof() ile incelendiğinde list çıkabilir, çünkü veri çerçeveleri bir liste türündedir. Ancak, class() fonksiyonu bu nesnenin özel sınıfını, yani data.frame olarak gösterecektir. Bu farklılıklar, bir nesnenin hangi özelliklere sahip olduğunu daha iyi anlamak için kullanılabilir.\n\n\nnumeric\n\na &lt;- 3.5\nclass(a)\n\n[1] \"numeric\"\n\ntypeof(a) # typeof numeriklerin tipini double olarak gösterir.\n\n[1] \"double\"\n\nis.numeric(a) # verinin tipinin numerik olup olmadığı sorgulanır.\n\n[1] TRUE\n\n\ninteger\n\nb &lt;- 5\nclass(b)\n\n[1] \"numeric\"\n\nis.integer(b)\n\n[1] FALSE\n\nc &lt;- 6L # integer olması için sayının sağına L yazılır.\nclass(c)\n\n[1] \"integer\"\n\nis.integer(c)\n\n[1] TRUE\n\nclass(as.integer(b)) # as. ile baslayan fonksiyonlar dönüşüm için kullanılır.\n\n[1] \"integer\"\n\n\ncomplex\n\nz &lt;- 4 + 2i\nclass(z)\n\n[1] \"complex\"\n\n\ncharacter\n\nd &lt;- \"R Programlama\"\nclass(d)\n\n[1] \"character\"\n\ne &lt;- \"5.5\"\nclass(e)\n\n[1] \"character\"\n\nclass(as.numeric(e))\n\n[1] \"numeric\"\n\n\nlogical\n\nx &lt;- TRUE\ny &lt;- FALSE\nclass(c(x,y))\n\n[1] \"logical\"\n\nas.integer(c(x,y)) # TRUE ve FALSE numeric olarak 1 ve 0 değerine karşılık gelir.\n\n[1] 1 0"
  },
  {
    "objectID": "data_types.html#veri-yapıları",
    "href": "data_types.html#veri-yapıları",
    "title": "2  Veri Tipleri ve Yapıları",
    "section": "2.2 Veri Yapıları",
    "text": "2.2 Veri Yapıları\n\n\n\nhttps://app.dataquest.io/m/493/dataframes-in-r/1/introduction\n\n\n\n2.2.1 Vektörler\n\nR’daki en temel nesneler vektörlerdir.\nVektörler homojen yapıya sahiptir yani bütün elemanları aynı veri tipinde olmalıdır.\nVektörler tek boyutludur.\nBir vektör oluşturmak için kullanabilecek en temel fonksiyon c()’dir.\n\n\nv &lt;- c(1,4,7,2,5,8,3,6,9)\n\nv[1] # 1. elemanını seçer\n\n[1] 1\n\nv[3] # 3. elemanını seçer\n\n[1] 7\n\nv[c(3,7)] # 3. ve 7. elemani secer\n\n[1] 7 3\n\nv[1:6] # 1. elemandan 6. elemana kadar secer\n\n[1] 1 4 7 2 5 8\n\nv[-2] # 2. elemani haric tutarak secer\n\n[1] 1 7 2 5 8 3 6 9\n\nlength(v) # vektörün uzunluğunu gösterir\n\n[1] 9\n\nv2 &lt;- c(v,12) # vektöre eleman ekleme\nv2\n\n [1]  1  4  7  2  5  8  3  6  9 12\n\n# : ile başlangıç ve bitiş değerleri belli olan vektörler yaratılabilir.\n\nv3 &lt;- 1:10\nv3\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\nv4 &lt;- 11:20\nv4\n\n [1] 11 12 13 14 15 16 17 18 19 20\n\n# Vektörler ile matematiksel işlemler yapılabilir.\n\nv3 + v4\n\n [1] 12 14 16 18 20 22 24 26 28 30\n\nv3 / v4\n\n [1] 0.09090909 0.16666667 0.23076923 0.28571429 0.33333333 0.37500000\n [7] 0.41176471 0.44444444 0.47368421 0.50000000\n\n2 * v3 - v4\n\n [1] -9 -8 -7 -6 -5 -4 -3 -2 -1  0\n\n\n\n2.2.1.1 Vektörler İle Kullanılabilecek Bazı Temel Fonksiyonlar\nseq()\nseq() fonksiyonu, ardışık sayı dizileri oluşturmak için kullanılır. Bu fonksiyon, başlangıç ve bitiş değerlerinin yanı sıra belirli bir artış veya azalış miktarını belirterek ardışık bir dizi oluşturmanızı sağlar.\nseq() fonksiyonu genellikle üç temel parametre alır:\n\nfrom: Dizinin başlangıç değeri.\nto: Dizinin bitiş değeri.\nby: Opsiyonel olarak belirlenebilen artış/azalış miktarı.\n\n\nseq(from = 5, to = 50, by =5) # 5 ile başlayan 50 ile biten 5şer artan vektör\n\n [1]  5 10 15 20 25 30 35 40 45 50\n\nseq(from = 5, to = 50, length = 7) # 5 ile başlayan 50 ile 7 elemanlı vektör\n\n[1]  5.0 12.5 20.0 27.5 35.0 42.5 50.0\n\nseq(5,1,-1) # 5 ile baslayıp 1'e kadar 1'er azaltarak vektor olusturma\n\n[1] 5 4 3 2 1\n\n\nrep()\nrep() fonksiyonu, R programlama dilinde tekrarlanan öğelerden oluşan vektörler oluşturmak için kullanılır. Bu fonksiyon, belirli bir öğenin veya öğelerin tekrarlanarak bir vektör oluşturulmasına izin verir.\nrep() fonksiyonunun temel parametreleri şunlardır:\n\nx: Tekrarlanacak öğelerin kendisi veya vektörü.\ntimes: Tekrar sayısını belirten bir sayı veya vektör.\neach: Her bir öğenin kaç kez tekrarlanacağını belirten bir sayı veya vektör.\nlength.out: çıktının istenen uzunluğu\n\n\nrep(10,times = 8) # 8 tane 10 değeri olan vektör\n\n[1] 10 10 10 10 10 10 10 10\n\nrep(c(1,2,3), times = 4) # 1,2,3 vektörünün 4 defa tekrarlanması\n\n [1] 1 2 3 1 2 3 1 2 3 1 2 3\n\nrep(c(1,2,3), each = 4) # each argünmanı ile sıralı ve tekrarlı vektör\n\n [1] 1 1 1 1 2 2 2 2 3 3 3 3\n\nrep(1:4, each = 2, length.out = 4) # sadece ilk 4 elemanı verir\n\n[1] 1 1 2 2\n\n\nrev()\nrev() fonksiyonu, bir vektörün elemanlarını tersine çevirerek yeni bir vektör oluşturur. Bu fonksiyon, vektörün sıralamasını tam tersine çevirir ve baştan sona sıralanan elemanları sondan başa doğru sıralar.\n\nv5 &lt;- c(3,5,6,1,NA,12,NA,8,9) # R'da NA boş gözlemi ifade eder.\nrev(v5) # vektörü tersine çevirir\n\n[1]  9  8 NA 12 NA  1  6  5  3\n\n\nrank()\nrank() fonksiyonu, bir vektörün değerlerini sıralamak için kullanılır ve her bir elemanın sıralamadaki yerini belirler. Bu fonksiyon, vektördeki her bir elemanın sıralamadaki konumunu döndürür.\n\nrank(v5) # elemanların sıra numarasını verir\n\n[1] 2 3 4 1 8 7 9 5 6\n\nrank(v5, na.last = TRUE) # NA leri son sıraya atar.\n\n[1] 2 3 4 1 8 7 9 5 6\n\nrank(v5, na.last = FALSE) # NA leri en başa koyar.\n\n[1] 4 5 6 3 1 9 2 7 8\n\nrank(v5, na.last = NA) # NA değerlere yer verilmez\n\n[1] 2 3 4 1 7 5 6\n\nrank(v5, na.last = \"keep\") # NA değerler oldukları gibi görünürler.\n\n[1]  2  3  4  1 NA  7 NA  5  6\n\n\nall()\nall() fonksiyonu, R programlama dilinde bir mantıksal vektörün tüm elemanlarının TRUE olup olmadığını kontrol etmek için kullanılır. Eğer vektörde en az bir FALSE değer varsa, FALSE sonucunu verir. Eğer vektördeki tüm elemanlar TRUE ise, TRUE döndürür. Bu fonksiyon genellikle koşullu ifadelerde ve vektörlerin doğruluğunu kontrol etmek için kullanılır.\n\nall(v5&gt;5) # vektördeki tüm elemanların şartı sağlayıp sağlamadıkları test edilir.\n\n[1] FALSE\n\nall(v5&gt;0) # vektörde NA varsa sonuç NA döner\n\n[1] NA\n\nall(v5&gt;0, na.rm = TRUE) # NA gözlemler hariç tutularak sonuç üretir.\n\n[1] TRUE\n\n\nany()\nany() fonksiyonu, R programlama dilinde bir mantıksal vektörün içinde en az bir tane TRUE değerinin olup olmadığını kontrol etmek için kullanılır. Eğer vektörde en az bir TRUE değer varsa, TRUE sonucunu verir. Eğer vektördeki tüm elemanlar FALSE ise, FALSE döndürür. Bu fonksiyon genellikle koşullu ifadelerde ve vektörlerin içeriğini kontrol etmek için kullanılır.\n\nany(v5&gt;6) # vektördeki en az bir elemanın şartı sağlayıp sağlamadığı test edilir.\n\n[1] TRUE\n\nany(v5==9) \n\n[1] TRUE\n\n\nunique()\nunique() fonksiyonu, R programlama dilinde bir vektördeki benzersiz (tekrar etmeyen) elemanları bulmak için kullanılır. Bu fonksiyon, vektördeki tekrarlanan elemanları kaldırarak yalnızca benzersiz elemanları içeren yeni bir vektör oluşturur. Bu fonksiyon, veri temizleme veya benzersiz değerlerin bulunması gibi durumlarda sıklıkla kullanılır.\n\nv6 &lt;- rep(1:5,3)\nv6\n\n [1] 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5\n\nunique(v6) # tekrarlı gözlemler temizlenir\n\n[1] 1 2 3 4 5\n\n\nduplicated()\nduplicated() fonksiyonu, bir vektördeki tekrarlanan değerleri tespit etmek için kullanılır. Bu fonksiyon, bir vektördeki her bir elemanın önceki elemanlar arasında daha önce görülüp görülmediğini kontrol eder ve tekrar eden değerleri belirler. Bu fonksiyon, veri temizleme veya tekrarlanan değerlerin tespit edilmesi gereken durumlarda kullanışlıdır.\n\nduplicated(v6) # tekrarlı gözlemlerin varlığını kontrol eder\n\n [1] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[13]  TRUE  TRUE  TRUE\n\nv6[duplicated(v6)] # tekrarlı gözlemleri listeler\n\n [1] 1 2 3 4 5 1 2 3 4 5\n\n\nsort()\nsort() fonksiyonu, vektörleri sıralamak için kullanılır. Bu fonksiyon, sayısal veya karakter vektörlerin elemanlarını artan veya azalan sıraya göre sıralar.\n\nsort(x, decreasing = FALSE)\n\nBurada:\n\nx, sıralanacak olan vektördür.\ndecreasing, sıralamanın azalan sırada olup olmayacağını belirleyen bir mantıksal değerdir (varsayılan olarak FALSE).\n\n\nsort(v5) # küçükten büyüğe sıralama yapar.\n\n[1]  1  3  5  6  8  9 12\n\nsort(v5,decreasing = TRUE) # azalan sırada sıralama yapar.\n\n[1] 12  9  8  6  5  3  1\n\n\ndiff()\ndiff() fonksiyonu, R programlama dilinde bir vektördeki ardışık elemanlar arasındaki farkları hesaplamak için kullanılır. Bu fonksiyon, ardışık elemanların birbirleri arasındaki farkları içeren yeni bir vektör döndürür.\ndiff() fonksiyonunun genel kullanımı şu şekildedir:\n\ndiff(x, lag = 1)\n\nBurada:\n\nx, farklarının hesaplanacağı vektördür.\nlag, elemanlar arasındaki farkın kaçıncı dereceden olacağını belirten bir sayıdır (varsayılan olarak 1).\n\n\nv5\n\n[1]  3  5  6  1 NA 12 NA  8  9\n\ndiff(v5,  lag = 1) # vektörde ardışık elemanlar arasındaki farkı bulur.\n\n[1]  2  1 -5 NA NA NA NA  1\n\ndiff(na.omit(v5)) # na.omit vektördeki NA gözlemleri temizler\n\n[1]  2  1 -5 11 -4  1\n\ndiff(na.omit(v5), lag = 2 ) # ikinci dereceden fark alma\n\n[1]  3 -4  6  7 -3\n\n\nis.na()\nis.na() fonksiyonu, R programlama dilinde bir vektördeki veya veri çerçevesindeki değerlerin NA (Not Available - Mevcut Değil) olup olmadığını kontrol etmek ve verilerin içinde eksik veya mevcut olmayan değerleri tespit etmek için kullanılır.için kullanılır. Her NA değeri için ilgili konumda TRUE, değilse FALSE döndürür. Veri temizleme ve analiz aşamalarında oldukça faydalıdır.\n\nis.na(v5) # vektördeki elamanların NA olup olmadığını test eder.\n\n[1] FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE\n\nis.nan(v5) # NaN aynı zamanda bir NA'dir.\n\n[1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n\nwhich()\nwhich() fonksiyonu, belirli bir koşulu sağlayan veya belirli bir değere sahip olan elemanların konumlarını bulmak için kullanılır. Bu fonksiyon, bir vektörde veya bir koşulu karşılayan elemanların indislerini döndürür. Filtreleme veya koşullu indeksleme gibi durumlarda oldukça faydalıdır.\n\nwhich(v5==12) # 6 sayısının posizyonunu gösterir\n\n[1] 6\n\nwhich.max(v5) # vektördeki maximum elemanın posizyonunu gösterir\n\n[1] 6\n\nwhich.min(v5) # vektördeki minimum elemanın posizyonunu gösterir\n\n[1] 4\n\nv5[which.min(v5)] # vektördeki minimum elemanı gösterir\n\n[1] 1\n\n\nTemel İstatistiksel Bazı Fonksiyonlar\n\nmean(v5) # NA varsa sonuç NA döner\n\n[1] NA\n\nmean(v5, na.rm = TRUE) # aritmetik ortalama\n\n[1] 6.285714\n\nmedian(v5,na.rm = TRUE) # medyan (ortanca)\n\n[1] 6\n\nsum(v5,na.rm = TRUE) # vektör toplamını verir\n\n[1] 44\n\nmin(v5,na.rm = TRUE) # vektörün minimum değeri\n\n[1] 1\n\nmax(v5,na.rm = TRUE) # vektörün maximum değeri\n\n[1] 12\n\nsd(v5,na.rm = TRUE) # standart sapma\n\n[1] 3.728909\n\nvar(v5,na.rm = TRUE) # varyans\n\n[1] 13.90476\n\n\n\n\n\n2.2.2 Matrisler\n\nMatrisler, iki boyutlu yani satır ve sütunları olan atomik vektörlerdir.\nmatrix() fonksiyonu ile tanımlanmaktadır.\nVektörlerin birleştirilmesi ile de matrisler oluşturulabilir. rbind satır bazlı alt alta birleştirme, cbind ise sütun bazlı yanyana birleştirme yapar. Burada vektörlerin aynı boyutlarda olmasına dikkat edilmesi gerekir.\n\n\nv1 &lt;- c(3,4,6,8,5)\nv2 &lt;- c(4,8,4,7,1)\nv3 &lt;- c(2,2,5,4,6)\nv4 &lt;- c(4,7,5,2,5)\n\nmatris &lt;- cbind(v1, v2, v3, v4)\nmatris\n\n     v1 v2 v3 v4\n[1,]  3  4  2  4\n[2,]  4  8  2  7\n[3,]  6  4  5  5\n[4,]  8  7  4  2\n[5,]  5  1  6  5\n\nis.matrix(matris)\n\n[1] TRUE\n\ndim(matris) # matrisin boyutları\n\n[1] 5 4\n\nmatrix(nrow = 3, ncol = 3, 1:9)\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\nmatrix(1:9, nrow = 3, ncol = 3, byrow = TRUE) # byrow satırlara göre oluşturur.\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n[3,]    7    8    9\n\nmat &lt;- seq(3, 21, by = 2)\nmat\n\n [1]  3  5  7  9 11 13 15 17 19 21\n\ndim(mat) &lt;- c(5,2)\nmat\n\n     [,1] [,2]\n[1,]    3   13\n[2,]    5   15\n[3,]    7   17\n[4,]    9   19\n[5,]   11   21\n\nmatrix(c(1,2,3,11,22,33), nrow = 2, ncol = 3, byrow = TRUE)\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]   11   22   33\n\n# normal dağılımdan 0 ortalamalı, 1 standart sapmalı 16 sayı üret\nMA &lt;- rnorm(16, 0, 1)\nMA &lt;- matrix(MA, nrow = 4, ncol = 4)\n\n# normal dağılımdan 90 ortalamalı, 10 standart sapmalı 16 sayı üret\nMB &lt;- rnorm(16, 90, 10)\nMB &lt;- matrix(MB, nrow = 4, ncol = 4)\n\nm &lt;- rbind(MA, MB)\nm\n\n            [,1]       [,2]         [,3]        [,4]\n[1,]  -0.3076122 -0.2131334   0.37714279  -1.0699579\n[2,]   0.7322045  0.7411308  -0.41337506  -0.3594119\n[3,]  -0.7072549  2.0346625  -0.09979534   1.3220264\n[4,]   0.3034562 -1.3837776  -0.39081630   0.3486002\n[5,]  93.7452533 94.5299511  91.03956318 107.5273710\n[6,]  87.1304737 86.7614324  93.18114863  90.0440138\n[7,] 109.2151439 96.3795778 102.35814120  81.5717110\n[8,]  88.4269236 83.5118685 103.38379041  86.5216945\n\n# satır ve sütun isimlendirme\ncolnames(m) &lt;- LETTERS[1:4]\nrownames(m) &lt;- tail(LETTERS,8)\nm\n\n            A          B            C           D\nS  -0.3076122 -0.2131334   0.37714279  -1.0699579\nT   0.7322045  0.7411308  -0.41337506  -0.3594119\nU  -0.7072549  2.0346625  -0.09979534   1.3220264\nV   0.3034562 -1.3837776  -0.39081630   0.3486002\nW  93.7452533 94.5299511  91.03956318 107.5273710\nX  87.1304737 86.7614324  93.18114863  90.0440138\nY 109.2151439 96.3795778 102.35814120  81.5717110\nZ  88.4269236 83.5118685 103.38379041  86.5216945\n\n# Matris Elemanlarina Erismek\nm[1,1] # 1. satır, 1.sütundak, eleman\n\n[1] -0.3076122\n\nm[4,2] # 4. satır, 2.sütundak, eleman\n\n[1] -1.383778\n\nm[,2] # 2. sütun elemanları\n\n         S          T          U          V          W          X          Y \n-0.2131334  0.7411308  2.0346625 -1.3837776 94.5299511 86.7614324 96.3795778 \n         Z \n83.5118685 \n\nm[-3,] # 3. satır hariç tüm elemanlar\n\n            A          B           C           D\nS  -0.3076122 -0.2131334   0.3771428  -1.0699579\nT   0.7322045  0.7411308  -0.4133751  -0.3594119\nV   0.3034562 -1.3837776  -0.3908163   0.3486002\nW  93.7452533 94.5299511  91.0395632 107.5273710\nX  87.1304737 86.7614324  93.1811486  90.0440138\nY 109.2151439 96.3795778 102.3581412  81.5717110\nZ  88.4269236 83.5118685 103.3837904  86.5216945\n\n# köşegen matris oluşturma\ndiag(2,nrow=3)\n\n     [,1] [,2] [,3]\n[1,]    2    0    0\n[2,]    0    2    0\n[3,]    0    0    2\n\ndiag(1,5) # 5*5 birim matris\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    0    0    0    0\n[2,]    0    1    0    0    0\n[3,]    0    0    1    0    0\n[4,]    0    0    0    1    0\n[5,]    0    0    0    0    1\n\n# transpose\nt(m)\n\n           S          T           U          V         W        X         Y\nA -0.3076122  0.7322045 -0.70725494  0.3034562  93.74525 87.13047 109.21514\nB -0.2131334  0.7411308  2.03466251 -1.3837776  94.52995 86.76143  96.37958\nC  0.3771428 -0.4133751 -0.09979534 -0.3908163  91.03956 93.18115 102.35814\nD -1.0699579 -0.3594119  1.32202641  0.3486002 107.52737 90.04401  81.57171\n          Z\nA  88.42692\nB  83.51187\nC 103.38379\nD  86.52169\n\n# matris ile işlemler\n\nm1 &lt;- matrix(1:4,nrow=2)\nm2 &lt;- matrix(5:8,nrow=2)\n\nm1;m2\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\n\n     [,1] [,2]\n[1,]    5    7\n[2,]    6    8\n\nm1 + m2 # matris elemanları birebir toplanır\n\n     [,1] [,2]\n[1,]    6   10\n[2,]    8   12\n\nm1 / m2 # matris elemanları birebir toplanır\n\n          [,1]      [,2]\n[1,] 0.2000000 0.4285714\n[2,] 0.3333333 0.5000000\n\nm1 * m2 # matris elemanları birebir çarpılır\n\n     [,1] [,2]\n[1,]    5   21\n[2,]   12   32\n\nm1 %*% m2 # matris çarpımı\n\n     [,1] [,2]\n[1,]   23   31\n[2,]   34   46\n\nsolve(m2) # matrisin tersi\n\n     [,1] [,2]\n[1,]   -4  3.5\n[2,]    3 -2.5\n\nrowSums(m1) # satır toplamları\n\n[1] 4 6\n\nrowMeans(m1) # satır ortalaması\n\n[1] 2 3\n\ncolSums(m1) # sütun toplamları\n\n[1] 3 7\n\ncolMeans(m1) # sütun ortalaması\n\n[1] 1.5 3.5\n\n\n\n\n2.2.3 Listeler\n\nListeler, birbirinden farklı veri tiplerine sahip vektörler, matrisler vb farklı objeleri birarada tutabilen yapılardır.\nlist() ile liste oluşturulur.\n\n\nx &lt;- c(3,5,7)\ny &lt;- letters[1:10]\nz &lt;- c(rep(TRUE,3),rep(FALSE,4))\n\nlist &lt;- list(x,y,z)\nlist\n\n[[1]]\n[1] 3 5 7\n\n[[2]]\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\"\n\n[[3]]\n[1]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE\n\nclass(list) # listenin sınıfını verir\n\n[1] \"list\"\n\nstr(list) # listenin yapısını verir\n\nList of 3\n $ : num [1:3] 3 5 7\n $ : chr [1:10] \"a\" \"b\" \"c\" \"d\" ...\n $ : logi [1:7] TRUE TRUE TRUE FALSE FALSE FALSE ...\n\nnames(list) &lt;- c(\"numeric\",\"karakter\",\"mantıksal\") # liste isimlendirme\nlist\n\n$numeric\n[1] 3 5 7\n\n$karakter\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\"\n\n$mantıksal\n[1]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE\n\nlist$numeric\n\n[1] 3 5 7\n\nlist$karakter\n\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\"\n\nlist$mantıksal\n\n[1]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE\n\nlist[[2]]\n\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\"\n\nlist$numeric2 &lt;- c(4:10) # listeye eleman ekleme\nlist\n\n$numeric\n[1] 3 5 7\n\n$karakter\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\"\n\n$mantıksal\n[1]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE\n\n$numeric2\n[1]  4  5  6  7  8  9 10\n\nlist$numeric &lt;- NULL # listeden eleman silme\nlist\n\n$karakter\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\"\n\n$mantıksal\n[1]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE\n\n$numeric2\n[1]  4  5  6  7  8  9 10\n\nunlist(list) # listeyi vektöre çevirir.\n\n karakter1  karakter2  karakter3  karakter4  karakter5  karakter6  karakter7 \n       \"a\"        \"b\"        \"c\"        \"d\"        \"e\"        \"f\"        \"g\" \n karakter8  karakter9 karakter10 mantıksal1 mantıksal2 mantıksal3 mantıksal4 \n       \"h\"        \"i\"        \"j\"     \"TRUE\"     \"TRUE\"     \"TRUE\"    \"FALSE\" \nmantıksal5 mantıksal6 mantıksal7  numeric21  numeric22  numeric23  numeric24 \n   \"FALSE\"    \"FALSE\"    \"FALSE\"        \"4\"        \"5\"        \"6\"        \"7\" \n numeric25  numeric26  numeric27 \n       \"8\"        \"9\"       \"10\" \n\n\n\n\n2.2.4 dataframe\nVeri çerçevesi (dataframe), her sütunun bir değişkenin değerlerini ve her satırın her sütundan bir değer kümesini içerdiği bir tablo veya iki boyutlu dizi benzeri bir yapıdır. Bir veri çerçevesinin özellikleri şunlardır:\n\nSütun adları boş olmamalıdır.\nSatır adları benzersiz olmalıdır.\nBir veri çerçevesinde saklanan veriler sayısal, faktör veya karakter tipinde olabilir.\nHer sütun aynı sayıda veri öğesi içermelidir.\n\ndata.frame() fonksiyonunu uygulayarak bir veri çerçevesi oluşturabiliriz.\n\n# data.frame oluşturma\nset.seed(12345)\n\ndata &lt;- data.frame(\n  row_num = 1:20,\n  col1 = rnorm(20),\n  col2 = runif(20), # uniform dağılımdam 20 gözlem üret\n  col3 = rbinom(20,size=5,prob = 0.5), # binom dağılımdam 20 gözlem üret\n  col4 = sample(c(\"TRUE\",\"FALSE\"),20,replace = TRUE),\n  col5 = sample(c(rep(c(\"E\",\"K\"),8),rep(NA,4))),\n  stringsAsFactors = TRUE # karakter olanlar faktör olarak değerlendirilsin\n)\n\nclass(data)\n\n[1] \"data.frame\"\n\nhead(data) # ilk 6 gözlemi gösterir\n\n  row_num       col1      col2 col3  col4 col5\n1       1  0.5855288 0.7821933    3 FALSE    E\n2       2  0.7094660 0.4291988    2  TRUE    E\n3       3 -0.1093033 0.9272740    5  TRUE    E\n4       4 -0.4534972 0.7732432    3 FALSE    K\n5       5  0.6058875 0.2596812    5  TRUE    E\n6       6 -1.8179560 0.3212247    2  TRUE &lt;NA&gt;\n\ntail(data) # son 6 gözlemi gösterir\n\n   row_num       col1       col2 col3  col4 col5\n15      15 -0.7505320 0.73249612    1 FALSE    K\n16      16  0.8168998 0.49924102    3 FALSE    K\n17      17 -0.8863575 0.72977197    4 FALSE    K\n18      18 -0.3315776 0.08033604    3  TRUE &lt;NA&gt;\n19      19  1.1207127 0.43553048    3 FALSE    K\n20      20  0.2987237 0.23658045    1 FALSE    E\n\ntail(data,10) # son 10 gözlemi gösterir\n\n   row_num       col1       col2 col3  col4 col5\n11      11 -0.1162478 0.96447029    3  TRUE    K\n12      12  1.8173120 0.82730287    3  TRUE    E\n13      13  0.3706279 0.31502824    2 FALSE &lt;NA&gt;\n14      14  0.5202165 0.21302545    2  TRUE    K\n15      15 -0.7505320 0.73249612    1 FALSE    K\n16      16  0.8168998 0.49924102    3 FALSE    K\n17      17 -0.8863575 0.72977197    4 FALSE    K\n18      18 -0.3315776 0.08033604    3  TRUE &lt;NA&gt;\n19      19  1.1207127 0.43553048    3 FALSE    K\n20      20  0.2987237 0.23658045    1 FALSE    E\n\nstr(data) # tablonun yapısını gösterir\n\n'data.frame':   20 obs. of  6 variables:\n $ row_num: int  1 2 3 4 5 6 7 8 9 10 ...\n $ col1   : num  0.586 0.709 -0.109 -0.453 0.606 ...\n $ col2   : num  0.782 0.429 0.927 0.773 0.26 ...\n $ col3   : int  3 2 5 3 5 2 4 1 3 4 ...\n $ col4   : Factor w/ 2 levels \"FALSE\",\"TRUE\": 1 2 2 1 2 2 2 1 2 2 ...\n $ col5   : Factor w/ 2 levels \"E\",\"K\": 1 1 1 2 1 NA 1 NA 2 1 ...\n\nsummary(data) # tablonun özet istatistiklerini gösterir\n\n    row_num           col1               col2              col3         col4   \n Min.   : 1.00   Min.   :-1.81796   Min.   :0.04346   Min.   :1.00   FALSE: 9  \n 1st Qu.: 5.75   1st Qu.:-0.36206   1st Qu.:0.23069   1st Qu.:2.00   TRUE :11  \n Median :10.50   Median : 0.09471   Median :0.43236   Median :3.00             \n Mean   :10.50   Mean   : 0.07652   Mean   :0.46554   Mean   :2.85             \n 3rd Qu.:15.25   3rd Qu.: 0.61194   3rd Qu.:0.74268   3rd Qu.:3.25             \n Max.   :20.00   Max.   : 1.81731   Max.   :0.96447   Max.   :5.00             \n   col5  \n E   :8  \n K   :8  \n NA's:4  \n         \n         \n         \n\n# veri çerçevesinden belirli sütun/ları seçmek için $ veya [] kullanılır.\nhead(data$col1)\n\n[1]  0.5855288  0.7094660 -0.1093033 -0.4534972  0.6058875 -1.8179560\n\nhead(data[,\"col1\"])\n\n[1]  0.5855288  0.7094660 -0.1093033 -0.4534972  0.6058875 -1.8179560\n\n# veri çerçevesinden belirli satır/ları seçmek için [] kullanılır.\ndata[1:2,] \n\n  row_num      col1      col2 col3  col4 col5\n1       1 0.5855288 0.7821933    3 FALSE    E\n2       2 0.7094660 0.4291988    2  TRUE    E\n\n# 3. and 5. satır ile 2. ve 4. kolon\ndata[c(3,5),c(2,4)]\n\n        col1 col3\n3 -0.1093033    5\n5  0.6058875    5\n\n# koşula göre veriler seçilebilir\ndata$row_num &gt; 12 # TRUE veya FALSE döner\n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[13]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n\ndata[data$row_num &gt; 12,] # koşula göre satırlar döner\n\n   row_num       col1       col2 col3  col4 col5\n13      13  0.3706279 0.31502824    2 FALSE &lt;NA&gt;\n14      14  0.5202165 0.21302545    2  TRUE    K\n15      15 -0.7505320 0.73249612    1 FALSE    K\n16      16  0.8168998 0.49924102    3 FALSE    K\n17      17 -0.8863575 0.72977197    4 FALSE    K\n18      18 -0.3315776 0.08033604    3  TRUE &lt;NA&gt;\n19      19  1.1207127 0.43553048    3 FALSE    K\n20      20  0.2987237 0.23658045    1 FALSE    E\n\n# subset ile tablo filtrelenebilir.\nsubset(data, \n       row_num &gt;= 10 & col4 == 'TRUE',\n       select = c(row_num, col1, col2,col4))\n\n   row_num       col1       col2 col4\n10      10 -0.9193220 0.62554280 TRUE\n11      11 -0.1162478 0.96447029 TRUE\n12      12  1.8173120 0.82730287 TRUE\n14      14  0.5202165 0.21302545 TRUE\n18      18 -0.3315776 0.08033604 TRUE\n\n# names veya colnames ile sütun isimleri elde edilir.\nnames(data)\n\n[1] \"row_num\" \"col1\"    \"col2\"    \"col3\"    \"col4\"    \"col5\"   \n\ncolnames(data)\n\n[1] \"row_num\" \"col1\"    \"col2\"    \"col3\"    \"col4\"    \"col5\"   \n\n# vektör ile sütun seçimi\ncols &lt;- c(\"col1\",\"col2\",\"col5\")\nhead(data[cols])\n\n        col1      col2 col5\n1  0.5855288 0.7821933    E\n2  0.7094660 0.4291988    E\n3 -0.1093033 0.9272740    E\n4 -0.4534972 0.7732432    K\n5  0.6058875 0.2596812    E\n6 -1.8179560 0.3212247 &lt;NA&gt;\n\n# sütun silme\ndata$col1 &lt;- NULL\nhead(data)\n\n  row_num      col2 col3  col4 col5\n1       1 0.7821933    3 FALSE    E\n2       2 0.4291988    2  TRUE    E\n3       3 0.9272740    5  TRUE    E\n4       4 0.7732432    3 FALSE    K\n5       5 0.2596812    5  TRUE    E\n6       6 0.3212247    2  TRUE &lt;NA&gt;\n\n# sütun ekleme\ndata$col1 &lt;- rnorm(20)\nhead(data)\n\n  row_num      col2 col3  col4 col5       col1\n1       1 0.7821933    3 FALSE    E  0.4768080\n2       2 0.4291988    2  TRUE    E  0.8424486\n3       3 0.9272740    5  TRUE    E -0.8903234\n4       4 0.7732432    3 FALSE    K  0.7529609\n5       5 0.2596812    5  TRUE    E  0.4452159\n6       6 0.3212247    2  TRUE &lt;NA&gt;  0.4211062\n\n# sütunları sıralama\nhead(data[c(\"row_num\",\"col1\",\"col2\",\"col3\",\"col4\",\"col5\")])\n\n  row_num       col1      col2 col3  col4 col5\n1       1  0.4768080 0.7821933    3 FALSE    E\n2       2  0.8424486 0.4291988    2  TRUE    E\n3       3 -0.8903234 0.9272740    5  TRUE    E\n4       4  0.7529609 0.7732432    3 FALSE    K\n5       5  0.4452159 0.2596812    5  TRUE    E\n6       6  0.4211062 0.3212247    2  TRUE &lt;NA&gt;\n\n# sıralama\nhead(data[order(data$col3),]) # artan\n\n   row_num       col2 col3  col4 col5         col1\n8        8 0.04345645    1 FALSE &lt;NA&gt; -0.896320181\n15      15 0.73249612    1 FALSE    K  0.148543198\n20      20 0.23658045    1 FALSE    E  0.240173186\n2        2 0.42919882    2  TRUE    E  0.842448636\n6        6 0.32122467    2  TRUE &lt;NA&gt;  0.421106220\n13      13 0.31502824    2 FALSE &lt;NA&gt; -0.008925433\n\nhead(data[order(-data$row_num),]) # azalan\n\n   row_num       col2 col3  col4 col5       col1\n20      20 0.23658045    1 FALSE    E  0.2401732\n19      19 0.43553048    3 FALSE    K  0.2583817\n18      18 0.08033604    3  TRUE &lt;NA&gt; -0.1712566\n17      17 0.72977197    4 FALSE    K  0.7884411\n16      16 0.49924102    3 FALSE    K -0.3798679\n15      15 0.73249612    1 FALSE    K  0.1485432\n\nhead(data[order(data$col3,-data$row_num),])\n\n   row_num       col2 col3  col4 col5         col1\n20      20 0.23658045    1 FALSE    E  0.240173186\n15      15 0.73249612    1 FALSE    K  0.148543198\n8        8 0.04345645    1 FALSE &lt;NA&gt; -0.896320181\n14      14 0.21302545    2  TRUE    K -0.326216850\n13      13 0.31502824    2 FALSE &lt;NA&gt; -0.008925433\n6        6 0.32122467    2  TRUE &lt;NA&gt;  0.421106220\n\n# kayıp gözlemler (missing values)\ntail(is.na(data))\n\n      row_num  col2  col3  col4  col5  col1\n[15,]   FALSE FALSE FALSE FALSE FALSE FALSE\n[16,]   FALSE FALSE FALSE FALSE FALSE FALSE\n[17,]   FALSE FALSE FALSE FALSE FALSE FALSE\n[18,]   FALSE FALSE FALSE FALSE  TRUE FALSE\n[19,]   FALSE FALSE FALSE FALSE FALSE FALSE\n[20,]   FALSE FALSE FALSE FALSE FALSE FALSE\n\ntail(is.na(data$col5))\n\n[1] FALSE FALSE FALSE  TRUE FALSE FALSE\n\ndata[is.na(data$col5),] # col5 NA olan satılar\n\n   row_num       col2 col3  col4 col5         col1\n6        6 0.32122467    2  TRUE &lt;NA&gt;  0.421106220\n8        8 0.04345645    1 FALSE &lt;NA&gt; -0.896320181\n13      13 0.31502824    2 FALSE &lt;NA&gt; -0.008925433\n18      18 0.08033604    3  TRUE &lt;NA&gt; -0.171256569\n\ndata[!is.na(data$col5),] # col5 NA olmayan satılar\n\n   row_num       col2 col3  col4 col5       col1\n1        1 0.78219328    3 FALSE    E  0.4768080\n2        2 0.42919882    2  TRUE    E  0.8424486\n3        3 0.92727397    5  TRUE    E -0.8903234\n4        4 0.77324322    3 FALSE    K  0.7529609\n5        5 0.25968125    5  TRUE    E  0.4452159\n7        7 0.06019516    4  TRUE    E  1.1495922\n9        9 0.05505382    3  TRUE    K  0.8696714\n10      10 0.62554280    4  TRUE    E  0.5059117\n11      11 0.96447029    3  TRUE    K  0.3317020\n12      12 0.82730287    3  TRUE    E  1.7399997\n14      14 0.21302545    2  TRUE    K -0.3262169\n15      15 0.73249612    1 FALSE    K  0.1485432\n16      16 0.49924102    3 FALSE    K -0.3798679\n17      17 0.72977197    4 FALSE    K  0.7884411\n19      19 0.43553048    3 FALSE    K  0.2583817\n20      20 0.23658045    1 FALSE    E  0.2401732\n\nrowSums(is.na(data)) # satılardaki toplam kayıp gözlem sayısı\n\n [1] 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 1 0 0\n\ncolSums(is.na(data)) # sütunlardaki toplam kayıp gözlem sayısı\n\nrow_num    col2    col3    col4    col5    col1 \n      0       0       0       0       4       0 \n\nsum(is.na(data)) # tablodaki toplam kayıp gözlem sayısı\n\n[1] 4\n\ncomplete.cases(data) # satırlarda eksik gözlemlerin durumu\n\n [1]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE\n[13] FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n\ndata[complete.cases(data),]\n\n   row_num       col2 col3  col4 col5       col1\n1        1 0.78219328    3 FALSE    E  0.4768080\n2        2 0.42919882    2  TRUE    E  0.8424486\n3        3 0.92727397    5  TRUE    E -0.8903234\n4        4 0.77324322    3 FALSE    K  0.7529609\n5        5 0.25968125    5  TRUE    E  0.4452159\n7        7 0.06019516    4  TRUE    E  1.1495922\n9        9 0.05505382    3  TRUE    K  0.8696714\n10      10 0.62554280    4  TRUE    E  0.5059117\n11      11 0.96447029    3  TRUE    K  0.3317020\n12      12 0.82730287    3  TRUE    E  1.7399997\n14      14 0.21302545    2  TRUE    K -0.3262169\n15      15 0.73249612    1 FALSE    K  0.1485432\n16      16 0.49924102    3 FALSE    K -0.3798679\n17      17 0.72977197    4 FALSE    K  0.7884411\n19      19 0.43553048    3 FALSE    K  0.2583817\n20      20 0.23658045    1 FALSE    E  0.2401732\n\ndata[!complete.cases(data),]\n\n   row_num       col2 col3  col4 col5         col1\n6        6 0.32122467    2  TRUE &lt;NA&gt;  0.421106220\n8        8 0.04345645    1 FALSE &lt;NA&gt; -0.896320181\n13      13 0.31502824    2 FALSE &lt;NA&gt; -0.008925433\n18      18 0.08033604    3  TRUE &lt;NA&gt; -0.171256569\n\nna.omit(data) # NA olan satırları siler.\n\n   row_num       col2 col3  col4 col5       col1\n1        1 0.78219328    3 FALSE    E  0.4768080\n2        2 0.42919882    2  TRUE    E  0.8424486\n3        3 0.92727397    5  TRUE    E -0.8903234\n4        4 0.77324322    3 FALSE    K  0.7529609\n5        5 0.25968125    5  TRUE    E  0.4452159\n7        7 0.06019516    4  TRUE    E  1.1495922\n9        9 0.05505382    3  TRUE    K  0.8696714\n10      10 0.62554280    4  TRUE    E  0.5059117\n11      11 0.96447029    3  TRUE    K  0.3317020\n12      12 0.82730287    3  TRUE    E  1.7399997\n14      14 0.21302545    2  TRUE    K -0.3262169\n15      15 0.73249612    1 FALSE    K  0.1485432\n16      16 0.49924102    3 FALSE    K -0.3798679\n17      17 0.72977197    4 FALSE    K  0.7884411\n19      19 0.43553048    3 FALSE    K  0.2583817\n20      20 0.23658045    1 FALSE    E  0.2401732\n\n\n\n\n2.2.5 tibble\ntibble, Hadley Wickham tarafından geliştirilen ve dplyr paketi ile sıkça kullanılan bir veri yapısıdır. tibble, data.frame’e benzerdir, ancak bazı önemli farklar vardır. tibble, daha düzenli ve okunabilir bir çıktı üretir ve bazı varsayılan davranışları data.frame’den farklıdır. Modern data.frame olarak tanımlanmaktadır.\n\n# tibble örneği\nlibrary(tibble)\n\nogrenciler_tibble &lt;- tribble(\n  ~Ad,     ~Yas, ~Cinsiyet,\n  \"Ali\",   20,   \"Erkek\",\n  \"Ayşe\",  22,   \"Kadın\",\n  \"Mehmet\", 21,  \"Erkek\",\n  \"Zeynep\", 23,  \"Kadın\"\n)\n\n# tibble'ı görüntüleme\nprint(ogrenciler_tibble)\n\n# A tibble: 4 × 3\n  Ad       Yas Cinsiyet\n  &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;   \n1 Ali       20 Erkek   \n2 Ayşe      22 Kadın   \n3 Mehmet    21 Erkek   \n4 Zeynep    23 Kadın   \n\n\nYukarıdaki örnekte, “ogrenciler_tibble” adında bir tibble oluşturuldu. tibble, sütun adlarını ve içeriği daha okunabilir bir şekilde görüntüler ve sütunların başlık ve veri tipi (~Ad, ~Yas, ~Cinsiyet) gibi özelliklerini korur.\n\n\n\n\n\n\nNot\n\n\n\nHem dataframe hem de tibble veri analizi ve işleme işlemlerinde kullanışlıdır. Hangi veri yapısını kullanacağınız, projenizin gereksinimlerine ve kişisel tercihinize bağlıdır. Özellikle veri analizi için dplyr gibi paketlerle çalışırken tibble tercih edilir.\n\n\n\n\n2.2.6 Faktörler\n\nFaktörler, verileri kategorilere ayırmak ve düzeyler halinde depolamak için kullanılan veri nesneleridir. Hem karakter hem de tam sayıları depolayabilirler.\n“Erkek,”Kadın” ve Doğru, Yanlış vb. gibi istatistiksel modelleme için veri analizinde faydalıdırlar.\nFaktörler, girdi olarak bir vektör alınarak factor() işlevi kullanılarak oluşturulur.\n\n\ndata &lt;- c(rep(\"erkek\",5),rep(\"kadın\",7))\nprint(data)\n\n [1] \"erkek\" \"erkek\" \"erkek\" \"erkek\" \"erkek\" \"kadın\" \"kadın\" \"kadın\" \"kadın\"\n[10] \"kadın\" \"kadın\" \"kadın\"\n\nis.factor(data)\n\n[1] FALSE\n\n# veriyi faktöre çevirme\nfactor_data &lt;- factor(data)\n\nprint(factor_data)\n\n [1] erkek erkek erkek erkek erkek kadın kadın kadın kadın kadın kadın kadın\nLevels: erkek kadın\n\nprint(is.factor(factor_data))\n\n[1] TRUE\n\nas.numeric(factor_data)\n\n [1] 1 1 1 1 1 2 2 2 2 2 2 2\n\n# data frame için vektörler oluşturalım\nboy &lt;- c(132,151,162,139,166,147,122)\nkilo &lt;- c(48,49,66,53,67,52,40)\ncinsiyet &lt;- c(\"erkek\",\"erkek\",\"kadın\",\"kadın\",\"erkek\",\"kadın\",\"erkek\")\n\n# data frame\ndf &lt;- data.frame(boy,kilo,cinsiyet)\nstr(df)\n\n'data.frame':   7 obs. of  3 variables:\n $ boy     : num  132 151 162 139 166 147 122\n $ kilo    : num  48 49 66 53 67 52 40\n $ cinsiyet: chr  \"erkek\" \"erkek\" \"kadın\" \"kadın\" ...\n\ndf$cinsiyet &lt;- factor(cinsiyet)\nstr(df)\n\n'data.frame':   7 obs. of  3 variables:\n $ boy     : num  132 151 162 139 166 147 122\n $ kilo    : num  48 49 66 53 67 52 40\n $ cinsiyet: Factor w/ 2 levels \"erkek\",\"kadın\": 1 1 2 2 1 2 1\n\nprint(is.factor(df$cinsiyet))\n\n[1] TRUE\n\n# cinsiyet kolononun seviyeleri\nprint(df$cinsiyet)\n\n[1] erkek erkek kadın kadın erkek kadın erkek\nLevels: erkek kadın\n\n# seviyelerin sırası değiştirilebilir.\n\ndf2 &lt;- c(rep(\"düşük\",4),rep(\"orta\",5),rep(\"yüksek\",2))\n\nfactor_df2 &lt;- factor(df2)\nprint(factor_df2)\n\n [1] düşük  düşük  düşük  düşük  orta   orta   orta   orta   orta   yüksek\n[11] yüksek\nLevels: düşük orta yüksek\n\norder_df2 &lt;- factor(factor_df2,levels = c(\"yüksek\",\"orta\",\"düşük\"))\nprint(order_df2)\n\n [1] düşük  düşük  düşük  düşük  orta   orta   orta   orta   orta   yüksek\n[11] yüksek\nLevels: yüksek orta düşük\n\n# ordered=TRUE ile seviyelerin sıralı olduğu ifade edilir\norder_df2 &lt;- factor(factor_df2,levels = c(\"yüksek\",\"orta\",\"düşük\"),ordered = TRUE)\nprint(order_df2)\n\n [1] düşük  düşük  düşük  düşük  orta   orta   orta   orta   orta   yüksek\n[11] yüksek\nLevels: yüksek &lt; orta &lt; düşük\n\n# Faktör seviyesi üretme\n\n# gl() fonksiyonunu kullanarak faktör seviyeleri üretebiliriz. \n# Girdi olarak kaç seviye ve her seviyeden kaç tane sayı oalcağı belirtilir.\n\nfaktor &lt;- gl(n=3, k=4, labels = c(\"level1\", \"level2\",\"level3\"),ordered = TRUE)\nprint(faktor)\n\n [1] level1 level1 level1 level1 level2 level2 level2 level2 level3 level3\n[11] level3 level3\nLevels: level1 &lt; level2 &lt; level3"
  }
]