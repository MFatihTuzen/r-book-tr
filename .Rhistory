not <- 75
if (not >= 90) {
print("Notunuz AA")
} else if (not >= 80) {
print("Notunuz BA")
} else if (not >= 70) {
print("Notunuz BB")
} else if (not >= 60) {
print("Notunuz CB")
} else {
print("Dersten başarısız oldunuz.")
}
vec <- c(-2, 3, -5, 8, -1)
sonuc <- ifelse(vec >= 0, "Pozitif", "Negatif")
print(sonuc)
for (i in 1:5) {
for (j in 1:5) {
cat(i, "*", j, "=", i*j, "\t")
}
cat("\n")
}
for (i in 1:5) {
for (j in 1:5) {
cat(i, "*", j, "=", i*j)
}
cat("\n")
}
n <- 10
fib <- numeric(n)
fib[1] <- 0
fib[2] <- 1
for (i in 3:n) {
fib[i] <- fib[i-1] + fib[i-2]
}
print(fib)
# i yerine farklı ifade de kullanılabilir
(x <- data.frame(age=c(28, 35, 13, 13),
height=c(1.62, 1.53, 1.83, 1.71),
weight=c(65, 59, 72, 83)))
for (var in colnames(x)) {
m <- mean(x[, var])
print(paste("Average", var, "is", m))
}
# i yerine farklı ifade de kullanılabilir
(x <- data.frame(yas = c(28, 35, 13, 13),
boy = c(1.62, 1.53, 1.83, 1.71),
kilo = c(65, 59, 72, 83)))
for (var in colnames(x)) {
m <- mean(x[, var])
print(paste("Ortalama", var, m, "'tir"))
}
for (var in colnames(x)) {
m <- mean(x[, var])
print(paste0("Ortalama ", var," ", m, "'tir"))
}
toplam <- 0
i <- 1
while (i <= 10) {
toplam <- toplam + i
i <- i + 1
}
print(toplam)
sum(1:10)
durum <- TRUE
sayac <- 0
while (durum) {
sayac <- sayac + 1
if (sayac > 5) {
durum <- FALSE
}
Sys.sleep(1)  # 1 saniye bekletme
print("Bekleme...")
}
durum <- TRUE
sayac <- 0
while (durum) {
sayac <- sayac + 1
if (sayac > 5) {
durum <- FALSE
}
Sys.sleep(1)  # 1 saniye bekletme
print("Bekleme...")
}
print("Döngü bitti!")
repeat {
girdi <- readline(prompt = "Çıkmak için 'exit' yazın: ")
if (girdi == "exit") {
break
}
print(paste("Girdiniz:", girdi))
}
repeat {
rastgele_sayi <- runif(1)  # 0 ile 1 arasında rastgele bir sayı üretir
print(rastgele_sayi)
if (rastgele_sayi > 0.9) {
break
}
}
x <- 0
repeat {
if (x^2 > 20) break     # bu koşul sağlandığında döngüyü bitir
print(x)
x <- x + 1              # x'i bir artır
}
for (i in 1:10) {
if (i %% 2 == 0) {
next  # Çift sayıları atla
}
print(i)
}
seq(from = 5, to = 50, length = 7) # 5 ile başlayan 50 ile 7 elemanlı vektör
seq(from = 5, to = 50, length.out = 7)
# rep()
# tekrarlı sayılar içeren vektörler oluşturulur.
rep(10,8) # 8 tane 10 değeri olan vektör
# rep()
# tekrarlı sayılar içeren vektörler oluşturulur.
rep(10,times = 8) # 8 tane 10 değeri olan vektör
rep(c(1,2,3), each = 4) # each argünmanı ile sıralı ve tekrarlı vektör
rep(1:4, each = 2, length.out = 4)
rank(v5) # elemanların sıra numarasını verir
diff(na.omit(v5), lag = 2 )
v5 <- c(3,5,6,1,NA,12,NA,8,9) # R'da NA boş gözlemi ifade eder.
diff(v5) # vektörde ardışık elemanlar arasındaki farkı bulur.
diff(na.omit(v5)) # na.omit vektördeki NA gözlemleri temizler
diff(na.omit(v5), lag = 2 )
v5
is.na(v5) # vektördeki elamanların NA olup olmadığını test eder.
is.nan(v5) # NaN aynı zamanda bir NA'dir.
