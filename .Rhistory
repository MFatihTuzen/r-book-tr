billboard
View(billboard_long)
library(tidyr)
billboard
billboard_long <- billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
)
billboard_long
str(billboard)
billboard
billboard_long <- billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
)
billboard_long
dim(billboard_long)
317*79
billboard_long <- billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na = FALSE
)
billboard_long
317*76
View(billboard_long)
billboard_long <- billboard |>
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
)
View(billboard_long)
billboard_long <- billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
names_transform = readr::parse_number,
values_to = "rank",
values_drop_na = TRUE,
)
View(billboard_long)
billboard_long <- billboard |>
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
)
View(billboard_long)
billboard_long <- billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
names_transform = readr::parse_number,
values_to = "rank",
values_drop_na = TRUE,
)
billboard_long <- billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
names_prefix = "wk",   # Yeni sütun adlarının önüne "wk" ön eki ekler
names_transform = as.integer,   # Sütun adlarından sayısal değerleri alır
values_to = "rank",
values_drop_na = TRUE,
)
View(billboard_long)
billboard_long <- billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
names_prefix = "wkx",   # Yeni sütun adlarının önüne "wk" ön eki ekler
# names_transform = as.integer,   # Sütun adlarından sayısal değerleri alır
values_to = "rank",
values_drop_na = TRUE,
)
View(billboard_long)
billboard_long <- billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
# names_prefix = "wkx",   # Yeni sütun adlarının önüne "wk" ön eki ekler
names_transform = as.integer,   # Sütun adlarından sayısal değerleri alır
values_to = "rank",
values_drop_na = TRUE,
)
View(billboard_long)
billboard_long <- billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
names_prefix = "wkx",   # Yeni sütun adlarının önüne "wk" ön eki ekler
names_transform = as.integer,   # Sütun adlarından sayısal değerleri alır
values_to = "rank",
values_drop_na = TRUE,
)
View(billboard_long)
billboard_long <- billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
names_prefix = "wk",   # Yeni sütun adlarının önüne "wk" ön eki ekler
names_transform = as.integer,   # Sütun adlarından sayısal değerleri alır
values_to = "rank",
values_drop_na = TRUE,
)
View(billboard_long)
world_bank_pop
who
who2
household
population
table1
table2
table3
table4
table4a
world_bank_pop
data_wide <- pivot_wider(world_bank_pop, names_from = "indicator", values_from = -c(country,indicator))
View(data_wide)
data_wide <- pivot_wider(world_bank_pop, names_from = indicator, values_from = -c(country,indicator))
View(data_wide)
data_wide <- pivot_wider(world_bank_pop, names_from = indicator, values_from = "2018")
colnames(world_bank_pop)
data_wide <- pivot_wider(world_bank_pop, names_from = indicator, values_from = "2017")
View(data_wide)
data_wide <- pivot_wider(world_bank_pop, id_cols = country, names_from = indicator, values_from = "2017")
View(data_wide)
data_wide <- pivot_wider(world_bank_pop, id_cols = country, names_from = indicator, values_from = c("2017","2018")
data_wide <- pivot_wider(world_bank_pop, id_cols = country, names_from = indicator, values_from = c("2017","2018"))
data_wide <- pivot_wider(world_bank_pop, id_cols = country, names_from = indicator, values_from = c("2016","2017"))
View(data_wide)
data_wide <- pivot_wider(world_bank_pop, id_cols = country, names_from = indicator, values_from = c("2016","2017"),
names_sep = ".")
View(data_wide)
fish_encounters
fish_encounters %>%
pivot_wider(names_from = station, values_from = seen)
View(veri_long)
View(billboard_long)
us_rent_income
data(package = "tidyr")
us_rent_income
us_rent_income_wide <- us_rent_income |>
pivot_wider(
names_from = variable,
values_from = c(estimate, moe)
)
View(us_rent_income_wide)
us_rent_income_wide <- us_rent_income |>
pivot_wider(
names_from = variable,
values_from = c(estimate, moe)
)
us_rent_income_wide
us_rent_income_wide <- us_rent_income |>
pivot_wider(
names_from = variable,
values_from = c(estimate, moe),
names_sep = "."
)
View(us_rent_income_wide)
us_rent_income_wide <- us_rent_income |>
pivot_wider(
names_from = variable,
values_from = c(estimate, moe),
names_sep = NULL
)
us_rent_income %>%
pivot_wider(
names_from = variable,
names_glue = "{variable}_{.value}",
values_from = c(estimate, moe)
)
us_rent_income_wide <- us_rent_income |>
pivot_wider(
names_from = variable,
values_from = c(estimate, moe),
names_sep = "."
)
us_rent_income_wide
us_rent_income
us_rent_income
warpbreaks <- as_tibble(warpbreaks[c("wool", "tension", "breaks")])
View(warpbreaks)
warpbreaks
warpbreaks %>%
pivot_wider(
names_from = wool,
values_from = breaks,
values_fn = mean
)
warpbreaks |>
group_by(wool,tension) |>
summarize(ort=mean(breaks))
library(dplyr)
warpbreaks |>
group_by(wool,tension) |>
summarize(ort=mean(breaks))
warpbreaks %>%
pivot_wider(
names_from = wool,
values_from = breaks,
values_fn = mean
)
warpbreaks %>%
pivot_wider(
names_from = wool,
values_from = breaks
)
us_rent_income |>
filter(GEOID == 72) |>
pivot_wider(
names_from = variable,
names_glue = "{variable}_{.value}",
values_from = c(estimate, moe),
values_fill =0
)
us_rent_income |>
filter(GEOID == 72) |>
pivot_wider(
names_from = variable,
names_glue = "{variable}_{.value}",
values_from = c(estimate, moe),
values_fill = list(c(0,0))
)
us_rent_income |>
filter(GEOID == 72) |>
pivot_wider(
names_from = variable,
names_glue = "{variable}_{.value}",
values_from = c(estimate, moe),
values_fill = list(0)
)
us_rent_income |>
filter(GEOID == 72) |>
pivot_wider(
names_from = variable,
names_glue = "{variable}_{.value}",
values_from = c(estimate, moe),
values_fill = list(estimate = 0, moe = 0)
)
us_rent_income |>
filter(GEOID == 72) |>
pivot_wider(
names_from = variable,
names_glue = "{variable}_{.value}",
values_from = c(estimate, moe),
values_fill = 0
)
us_rent_income |>
filter(GEOID == 72) |>
pivot_wider(
names_from = variable,
values_from = c(estimate, moe),
values_fill = 0
)
xx <- us_rent_income |>
filter(GEOID == 72) |>
pivot_wider(
names_from = variable,
values_from = c(estimate, moe),
values_fill = 0
)
View(xx)
us_rent_income |>
filter(GEOID == 72) |>
pivot_wider(
names_from = variable,
values_from = c(estimate, moe),
values_fill = 0
)
us_rent_income |>
filter(GEOID == 72)
us_rent_income |>
filter(GEOID == 72) |>
pivot_wider(
names_from = variable,
values_from = c(estimate, moe),
values_fill = list(variable=0)
)
us_rent_income |>
filter(GEOID == 72) |>
filter(!is.na(variable)) |>
pivot_wider(
names_from = variable,
values_from = c(estimate, moe),
values_fill = list(variable=0)
)
us_rent_income |>
filter(GEOID == 72) |>
pivot_wider(
id_cols = c(GEOID ,NAME),
names_from = variable,
values_from = c(estimate, moe),
values_fill = list(variable=0)
)
us_rent_income |>
filter(GEOID == 72) |>
pivot_wider(
id_cols = c(GEOID ,NAME),
names_from = variable,
values_from = c(estimate, moe),
values_fill = 0
)
us_rent_income |>
filter(GEOID == 72) |>
pivot_wider(
id_cols = c(GEOID ,NAME),
names_from = variable,
values_from = c(estimate, moe),
values_fill = 1
)
us_rent_income |>
filter(GEOID == 72) |>
pivot_wider(
id_cols = c(GEOID ,NAME),
names_from = variable,
values_from = c(estimate),
values_fill = 0
)
us_rent_income |>
filter(GEOID == 72) |>
pivot_wider(
id_cols = c(GEOID ,NAME),
names_from = variable,
values_from = c(estimate,moe),
values_fill = 0
)
us_rent_income |>
filter(GEOID == 72) |>
pivot_wider(
id_cols = c(GEOID ,NAME),
values_fill = 0,
names_from = variable,
values_from = c(estimate,moe)
)
us_rent_income
us_rent_income |>
slice(-1)
us_rent_income |>
slice(-1) |>
pivot_wider(
id_cols = c(GEOID ,NAME),
values_fill = 0,
names_from = variable,
values_from = c(estimate,moe),
)
us_rent_income |>
slice(-1)
us_rent_income |>
slice(-1) |>
pivot_wider(
names_from = variable,
values_from = c(estimate,moe),
)
us_rent_income |>
slice(-1) |>
pivot_wider(
names_from = variable,
values_from = c(estimate,moe),
values_fill = 0
)
veri <- data.frame(
Ad = c("Ali", "Esra"),
Soyad = c("Yılmaz", "Mutlu")
)
veri <- unite(veri, AdSoyad, Ad, Soyad, sep = " ")
print(veri)
veri <- data.frame(
Ad = c("Ahmet", "Mehmet", "Ayşe", "Fatma", "Mustafa", "Emine"),
Soyad = c("Yılmaz", "Kaya", "Demir", "Çelik", "Şahin", "Koç")
)
unite(veri, AdSoyad, Ad, Soyad, sep = " ")
veri <- data.frame(
Ad = c("Ahmet", "Mehmet", "Ayşe", "Fatma", "Mustafa", "Emine"),
veri <- data.frame(
Ad = c("Ahmet", "Mehmet", "Ayşe", "Fatma", "Mustafa", "Emine"),
Soyad = c("Yılmaz", "Kaya", "Demir", "Çelik", "Şahin", "Koç")
)
veri <- data.frame(
Ad = c("Ahmet", "Mehmet", "Ayşe", "Fatma", "Mustafa", "Emine"),
Soyad = c("Yılmaz", "Kaya", "Demir", "Çelik", "Şahin", "Koç")
)
veri <- data.frame(
Ad = c("Ahmet", "Mehmet", "Ayşe", "Fatma", "Mustafa", "Emine"),
Soyad = c("Yılmaz", "Kaya", "Demir", "Çelik", "Şahin", "Koç")
)
# Türkçe isim ve soyisim listeleri
isimler <- c("Ahmet", "Mehmet", "Ayşe", "Fatma", "Mustafa", "Emine", "Ali", "Zeynep", "Hüseyin", "Hatice")
veri <- data.frame(
Ad = c("Ahmet", "Mehmet", "Ayşe", "Fatma", "Mustafa", "Emine"),
Soyad = c("Yılmaz", "Kaya", "Demir", "Çelik", "Şahin", "Koç")
)
# Türkçe isim ve soyisim listeleri
isimler <- c("Ahmet", "Mehmet", "Ayşe", "Fatma", "Mustafa", "Emine", "Ali", "Zeynep", "Hüseyin", "Hatice")
isimler
veri <- data.frame(
Ad = c("Ahmet", "Mehmet", "Ayşe", "Fatma", "Mustafa", "Emine"),
Soyad = c("Yılmaz", "Kaya", "Demir", "Çelik", "Şahin", "Koç")
)
veri <- data.frame(
Ad = c("Ahmet", "Mehmet", "Ayşe", "Fatma", "Mustafa", "Emine", "Ali", "Zeynep", "Hüseyin", "Hatice"),
Soyad = c("Yılmaz", "Kaya", "Demir", "Çelik", "Şahin", "Koç", "Öztürk", "Arslan", "Aydın", "Güneş")
veri <- data.frame(
Ad = c("Ahmet", "Mehmet", "Fatma", "Mustafa"),
Soyad = c("Demir", "Umut", "Arslan", "Kaya")
)
veri <- data.frame(
Ad = c("Ahmet", "Mehmet", "Fatma", "Mustafa"),
Soyad = c("Demir", "Umut", "Arslan", "Kaya")
)
unite(veri, AdSoyad, Ad, Soyad, sep = " ")
veri <- data.frame(
AdSoyad = c("Ali Yılmaz", "Esra Mutlu")
)
veri <- separate(veri, AdSoyad, c("Ad", "Soyad"), sep = " ")
print(veri)
veri <- data.frame(
AdSoyad = c("Ali Yılmaz", "Esra Mutlu")
)
veri <- separate(veri, AdSoyad, into = c("Ad", "Soyad"), sep = " ")
print(veri)
veri <- data.frame(
AdSoyad = c("Ahmet Demir","Mehmet Umut", "Fatma Arslan", "Mustafa Kaya")
)
veri <- separate(veri, AdSoyad, into = c("Ad", "Soyad"), sep = " ")
print(veri)
# Örnek veri seti oluşturma
veri <- tibble(
sokak = c("Örnek Sokak", "Şehitler Caddesi", "Atatürk Bulvarı"),
mahalle = c("Merkez", "Güneşli", "Bahçelievler"),
ilce = c("Çankaya", "Bağcılar", "Üsküdar"),
sehir = c("Ankara", "İstanbul", "İstanbul"),
# Örnek veri seti oluşturma
veri <- tibble(
sokak = c("Örnek Sokak", "Şehitler Caddesi", "Atatürk Bulvarı"),
mahalle = c("Merkez", "Güneşli", "Bahçelievler"),
ilce = c("Çankaya", "Bağcılar", "Üsküdar"),
sehir = c("Ankara", "İstanbul", "İstanbul"),
Sys.getlocale()
Sys.getenv()
Sys.getlocale()
Sys.setlocale(category = "LC_ALL", locale = "Turkish_Turkey.1254")
Sys.setlocale(category = "LC_ALL", locale = "Turkish")
veri <- tibble(
sokak = c("Örnek Sokak", "Şehitler Caddesi", "Atatürk Bulvarı"))
veri <- tibble(
sokak = c("Çankaya", "Şehitler Caddesi", "Atatürk Bulvarı"))
View(veri)
# Örnek veri seti oluşturma
veri <- tibble(
sokak = c("Örnek Sokak", "Şehitler Caddesi", "Atatürk Bulvarı"),
mahalle = c("Merkez", "Güneşli", "Bahçelievler"),
ilce = c("Çankaya", "Bağcılar", "Üsküdar"),
sehir = c("Ankara", "İstanbul", "İstanbul"),
posta_kodu = c("06000", "34100", "34662"),
.encoding = "UTF-8" # Karakter kodlamasını belirtme
)
# Örnek veri seti oluşturma
veri <- tibble(
sokak = c("Örnek Sokak", "Şehitler Caddesi", "Atatürk Bulvarı"),
mahalle = c("Merkez", "Güneşli", "Bahçelievler"),
ilce = c("Çankaya", "Bağcılar", "Üsküdar"),
sehir = c("Ankara", "İstanbul", "İstanbul"),
posta_kodu = c("06000", "34100", "34662")
)
# unite() fonksiyonunu kullanarak yeni bir adres sütunu oluşturma
veri <- veri %>%
unite(adres, sokak, mahalle, ilce, sehir, posta_kodu, sep = ", ")
View(veri)
veri <- tibble(
sokak = c("Örnek Sokak", "Şehitler Caddesi", "Atatürk Bulvarı"),
mahalle = c("Merkez", "Güneşli", "Bahçelievler"),
ilce = c("Çankaya", "Bağcılar", "Üsküdar"),
sehir = c("Ankara", "İstanbul", "İstanbul"),
posta_kodu = c("06000", "34100", "34662")
)
veri %>%
unite(adres, sokak, mahalle, ilce, sehir, posta_kodu, sep = ", ")
adresler <- tibble(
sokak = c("Örnek Sokak", "Şehitler Caddesi", "Atatürk Bulvarı"),
mahalle = c("Merkez", "Güneşli", "Bahçelievler"),
ilce = c("Çankaya", "Bağcılar", "Üsküdar"),
sehir = c("Ankara", "İstanbul", "İstanbul"),
posta_kodu = c("06000", "34100", "34662")
)
veri_unite <- adresler %>%
unite(adres, sokak, mahalle, ilce, sehir, posta_kodu, sep = ", ")
adresler <- tibble(
sokak = c("Örnek Sokak", "Şehitler Caddesi", "Atatürk Bulvarı"),
mahalle = c("Merkez", "Güneşli", "Bahçelievler"),
ilce = c("Çankaya", "Bağcılar", "Üsküdar"),
sehir = c("Ankara", "İstanbul", "İstanbul"),
posta_kodu = c("06000", "34100", "34662")
)
adresler
adresler_unite <- adresler %>%
unite(adres, sokak, mahalle, ilce, sehir, posta_kodu, sep = ", ")
adresler_unite
separate(adresler_unite, adres, into = c("sokak", "mahalle","ilce","sehir","posta_kodu"), sep = ",")
rm(list=ls())
