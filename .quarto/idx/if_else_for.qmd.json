{"title":"Kontrol İfadeleri","markdown":{"headingText":"Kontrol İfadeleri","containsRefs":false,"markdown":"\nKontrol ifadeleri ve döngüler R içerisinde sıklıkla kullanılan yapılardır. Belirli şartlara bağlı olan ya da tekrarlı işlemler için oldukça faydalıdırlar. R programlama dilinde en çok kullanılan **if-else, for, while, next, break** gibi kontrol döngüleridir.\n\n## if-else\n\n**`if-else`** ifadesi, programların belirli koşullar altında farklı işlemler yapmasını sağlar. Eğer bir koşul doğruysa belirli bir blok çalıştırılır, aksi takdirde başka bir blok çalıştırılır. Bu kombinasyon R'de en sık kullanılan kontrol yapılarındandır. Bu yapıda, bir koşulu test edebilir ve doğru veya yanlış olmasına bağlı olarak ona göre hareket edebilirsiniz. if-else kombinasyonlarında aşağıdaki yapılar kullanılmaktadır:\n\n```{r}\n#| eval: false\nif (koşul) {\n  # Koşul doğruysa yapılacak işlemler\n} else {\n  # Koşul yanlışsa yapılacak işlemler\n}\n```\n\n```{r}\n#| eval: false\nif (koşul1) {\n  # Koşul 1 doğruysa yapılacak işlemler\n} else if (koşul2) {\n  # Koşul 2 doğruysa yapılacak işlemler\n} else {\n  # Hiçbir koşul doğru değilse yapılacak işlemler\n}\n```\n\nÖrnek olarak, bir kullanıcının yaşına bağlı olarak belli bir mesaj gösterelim.\n\n```{r}\n\nyas <- 18\n\nif (yas >= 18) {\n  print(\"Oy kullanabilirsiniz!\")\n} else {\n  print(\"Üzgünüz, oy kullanmak için henüz yaşınız tutmuyor.\")\n}\n\n\n```\n\nBurada, **`if`** ifadesi **`yas >= 18`** koşulunu kontrol eder. Eğer bu koşul doğruysa, \"Oy kullanabilirsiniz!\" mesajı ekrana yazdırılır; aksi halde, \"Üzgünüz, oy kullanmak için henüz yaşınız tutmuyor.\" mesajı yazdırılır.\n\nBirden fazla koşulu kontrol etmek için **`else if`** ifadesini kullanabiliriz. Örneğin, bir öğrencinin not durumunu kontrol edelim.\n\n```{r}\n\nnot <- 75\n\nif (not >= 90) {\n  print(\"Notunuz AA\")\n} else if (not >= 80) {\n  print(\"Notunuz BA\")\n} else if (not >= 70) {\n  print(\"Notunuz BB\")\n} else if (not >= 60) {\n  print(\"Notunuz CB\")\n} else {\n  print(\"Dersten başarısız oldunuz.\")\n}\n\n```\n\nBu örnekte, **`else if`** ifadeleri sırayla öğrencinin notunu kontrol eder ve koşullara uygun olarak farklı mesajları yazdırır. Eğer hiçbir koşul sağlanmazsa, \"Dersten başarısız oldunuz.\" mesajı yazdırılır.\n\nAyrıca **`ifelse()`** fonksiyonu R programlama dilinde bulunan başka bir fonksiyondur ve **`if-else`** ifadesine benzer bir işlevi vardır. Bu fonksiyon, vektörler üzerinde koşullu işlemler yapmak için kullanılır.\n\n**`ifelse()`** fonksiyonu şu şekilde kullanılır.\n\n```{r}\n#| eval: false\nifelse(test, yes, no)\n```\n\n-   **`test`**: Koşul veya koşulları içeren ifade veya vektör.\n\n-   **`yes`**: Koşul doğruysa uygulanacak değer veya işlem.\n\n-   **`no`**: Koşul yanlışsa uygulanacak değer veya işlem.\n\nÖrnek olarak, bir vektördeki değerlerin pozitif veya negatif olmasını kontrol edelim:\n\n```{r}\n\nvec <- c(-2, 3, -5, 8, -1)\nsonuc <- ifelse(vec >= 0, \"Pozitif\", \"Negatif\")\nprint(sonuc)\n\n```\n\nBu örnekte, **`ifelse()`** fonksiyonu **`vec`** vektöründeki her bir değeri kontrol eder. Eğer değer 0'dan büyük veya eşitse, o değerin karşılığı \"Pozitif\" olur; aksi takdirde \"Negatif\" olur.\n\nAşağıdaki örnekte ise **`ifelse()`** fonksiyonun birden fazla şekilde bir dataframe içerisinde nasıl kullanıldığını gösterelim.\n\n```{r}\n\ndf <- data.frame(value = 1:9)\ndf$group <- ifelse(df$value <= 3,1,ifelse(df$value > 3 & df$value < 6,2,3))\ndf\n\n```\n\nBu örnekte, yeni oluşturulacak `group` değişkeni için değerler atanacaktır. Buna göre,\n\n-   Eğer `value` kolonu 3 ve altında değere sahipse `group` değişkenine 1,\n\n-   `value` kolonu 3'den büyük ve 6'dan küçük ise `group` değişkenine 2,\n\n-   Diğer durumlarda ise `group` değişkenine 3 değeri atanacaktır.\n\n## Döngüler\n\n### for\n\n**`for`** döngüsü R programlama dilinde tekrarlı işlemler yapmak için kullanılır. Bu döngü, bir dizi veya vektör üzerinde iterasyon yaparak her bir elemana erişmenizi sağlar. Genellikle listedeki her elemanı veya belirli bir aralıktaki sayıları işlemek için kullanılır. **`for`** döngüsü şu yapıya sahiptir:\n\n```{r}\n#| eval: false\nfor (degisken in dizi veya dizin) {\n  # Her iterasyonda yapılacak işlemler\n}\n```\n\n-   **`degisken`**: Her iterasyonda dizin veya dizi elemanlarını temsil eden değişken.\n\n-   **`dizi veya dizin`**: Döngünün üzerinde dolaşacağı vektör, liste veya sayı dizisi.\n\nÖrnek olarak, 1'den 5'e kadar olan sayıları ekrana yazdıran bir **`for`** döngüsü kullanalım:\n\n```{r}\n\nsehirler <- c(\"İstanbul\", \"Ankara\", \"İzmir\", \"Bursa\")\n\nfor (sehir in sehirler) {\n  print(paste(\"Şehir:\", sehir))\n}\n\n```\n\nBu örnekte, **`sehirler`** listesindeki her bir elemanı **`sehir`** değişkenine atar ve bu elemanları döngü içinde kullanarak her bir şehri ekrana yazdırır.\n\n```{r}\n\nfor (i in 1:5) {\n  print(paste(\"Karesi:\", i^2))\n}\n```\n\nBu örnek, 1'den 5'e kadar olan sayıları **`i`** değişkenine atar ve her bir sayının karesini ekrana yazdırır.\n\n```{r}\n\nfor (i in 1:5) {\n  for (j in 1:5) {\n    cat(i, \"*\", j, \"=\", i*j, \"\\t\")\n  }\n  cat(\"\\n\")\n}\n```\n\nBu örnekte, iç içe **`for`** döngüleri kullanılarak 1'den 5'e kadar olan sayıların çarpım tablosu oluşturuluyor. **`cat`** fonksiyonu kullanılarak değerler ekrana yazdırılıyor ve **`\\t`** ifadesi her bir değer arasında bir sekme boşluğu eklenmesini sağlıyor. Bu sayede çarpım tablosu satır içinde düzenli bir şekilde görüntülenmiş oluyor. **`\\t`** kullanımı, metin tabanlı çıktıları düzenlemek ve okunabilirliği artırmak için yaygın olarak kullanılan bir yöntemdir.\n\n```{r}\n\nn <- 10\nfib <- numeric(n)\nfib[1] <- 0\nfib[2] <- 1\n\nfor (i in 3:n) {\n  fib[i] <- fib[i-1] + fib[i-2]\n}\nprint(fib)\n\n```\n\nBu örnekte, **`for`** döngüsü kullanılarak Fibonacci serisi hesaplanıyor ve **`n`** değerine göre seriyi ekrana yazdırıyor. Fibonacci serisi, her sayının kendisinden önceki iki sayının toplamıyla elde edildiği bir sayı dizisidir. Seri, herhangi bir rakam ile başlayabilir. Genellikle 0 ile başlar ve ilk iki terim 0 ve 1'dir.\n\nSeri şu şekilde ilerler:\n\n0, 1, 1, 2, 3, 5, 8, 13, 21, ...\n\nHer sayı, kendisinden önce gelen iki sayının toplamıdır. Örneğin, 2 sayısı 1 ve 1'in toplamıdır, 3 sayısı ise 1 ve 2'nin toplamıdır ve bu şekilde devam eder.\n\nFibonacci Dizisinde yer alan sayıların diğer bir özelliği kendilerinden bir öncekiyle oranlandığında oluşan serinin altın orana yaklaşarak ilerlemesidir. Fibonacci serisi, doğada birçok yerde gözlemlenen yapılarla ilişkilendirilir. Bitki yapısı, deniz kabukları, sanat eserleri ve matematiksel modellemelerde sıkça karşımıza çıkar. Ayrıca, algoritmaların ve programların verimliliğini test etmek için kullanılabilir.\n\nfor döngüsünde i, j gibi harfler yerine başka ifadeler de kullanılabilir. Aşağıdaki örnekte oluşturulan 3 değişkenli bir veri setindeki ortalama değerler **`var`** değişkeni kulanılarak döngü yardımıyla ekrana yazdırılmıştır.\n\n```{r}\n\n(x <- data.frame(yas = c(28, 35, 13, 13),\n                boy = c(1.62, 1.53, 1.83, 1.71),\n                kilo = c(65, 59, 72, 83)))\n\nfor (var in colnames(x)) {\n    m <- mean(x[, var])\n    print(paste0(\"Ortalama \", var,\" \", m, \"'tir\"))\n}\n\n```\n\n**Kullanım Alanları**\n\n-   **Veri İşleme**: Veri setlerindeki her bir öğeyi işlemek için **`for`** döngüsü kullanılabilir. Örneğin, liste, vektör veya matrislerdeki her bir öğeyi ele almak için kullanılabilir.\n\n-   **Tekrarlı İşlemler**: Belirli bir işlemi veya kod bloğunu belirli bir sayıda veya belirli bir koşula kadar tekrar etmek için **`for`** döngüsü kullanılabilir.\n\n-   **İterasyonlar ve Simülasyonlar**: İterasyonlar, özellikle simülasyonlarda, çeşitli durumları veya senaryoları değerlendirmek için sıklıkla kullanılır. Her bir iterasyon, farklı bir durumu temsil edebilir.\n\n::: callout-warning\n## Uyarı\n\n**`for`** döngüsü, belirli bir veri yapısındaki elemanları işlemek veya belirli bir işlemi tekrarlamak için oldukça kullanışlıdır. Ancak büyük veri setleri veya karmaşık işlemler için vektör işlemleri veya fonksiyonel programlama teknikleri genellikle tercih edilir, çünkü bu teknikler genellikle daha hızlı çalışabilir.\n:::\n\n### while\n\n**`while`** döngüsü, belirli bir koşul doğru olduğu sürece belirli bir işlemi tekrar etmek için kullanılır. Genellikle döngünün kaç kere çalışacağı önceden belirlenmiş değilse veya bir koşul karşılanana kadar çalışmaya devam etmesi gerektiğinde tercih edilir. **`while`** döngüsü şu şekilde çalışır:\n\n```{r}\n#| eval: false\nwhile (koşul) {\n  # Koşul doğru olduğu sürece yapılacak işlemler\n}\n\n```\n\n**`koşul`**: Bir mantıksal ifade veya değer. Bu koşul doğru olduğu sürece döngü çalışmaya devam eder.\n\n```{r}\n\ntoplam <- 0\ni <- 1\n\nwhile (i <= 10) {\n  toplam <- toplam + i\n  i <- i + 1\n}\n\nprint(toplam)\n\n```\n\nBu örnekte, **`while`** döngüsü kullanılarak 1'den 10'a kadar olan sayıların toplamı hesaplanıyor.\n\n**Kullanım Alanları**\n\n-   **Kullanıcı Girişi**: Kullanıcıdan bir değer alınana veya belirli bir koşul karşılanana kadar kullanıcıdan giriş almak için kullanılabilir.\n\n-   **Dosya Okuma ve Yazma İşlemleri**: Dosya içeriği işlenirken belirli bir koşula kadar dosya okuma veya yazma işlemleri için kullanılabilir.\n\n-   **Doğrusal Arama**: Bir koşul karşılanana kadar bir listede veya veri yapısında doğrusal arama yapmak için kullanılabilir.\n\n::: callout-warning\n## Uyarı\n\n**`while`** döngüsü, belirli bir koşul doğru olduğu sürece çalışır ve bu koşulun sonlanması veya değişmesiyle birlikte döngü sona erer. Ancak dikkatli kullanılmadığında sonsuz döngülere neden olabilir, bu yüzden döngüdeki koşulun belirli bir zamanda sonlanmasını sağlamak önemlidir.\n:::\n\n### repeat\n\n**`repeat`** döngüsü, belirli bir koşul sağlanana kadar tekrarlı işlemler yapmak için kullanılır. **`while`** döngüsünden farklı olarak, **`repeat`** döngüsü bir koşulun doğru veya yanlış olmasına bakmadan işlem yapmaya devam eder. Döngü, içerideki kod çalıştırıldıktan sonra, elle kesilmediği sürece sonsuza kadar devam eder.\n\n**`repeat`** döngüsünün yapısı şu şekildedir:\n\n```{r}\n#| eval: false\nrepeat {\n  # Koşul kontrolü yapılmaksızın sürekli çalışacak işlemler\n  # Eğer bir şart sağlanırsa döngüyü kırarak çıkılır (break)\n}\n\n```\n\nGenellikle **`repeat`** döngüsü, koşulun döngü içinde daha sonra kontrol edilmesi gereken durumlarda veya kullanıcıdan belirli bir işaret alınana kadar çalışması gereken durumlarda kullanılır.\n\n```{r}\n\nrepeat {\n  rastgele_sayi <- runif(1)  # 0 ile 1 arasında rastgele bir sayı üretir\n  print(rastgele_sayi)\n  if (rastgele_sayi > 0.9) {\n    break\n  }\n}\n\n\n```\n\nBu örnekte, **`repeat`** döngüsü 0 ile 1 arasında rastgele sayılar üretir ve bu sayılar 0.9'dan büyük olduğunda döngüyü sonlandırır.\n\n```{r}\nx <- 0\n\nrepeat {\n    if (x^2 > 20) break     # bu koşul sağlandığında döngüyü bitir\n    print(x)               \n    x <- x + 1              # x'i bir artır\n}\n```\n\nBu örnekte ise, **`repeat`** döngüsü 0 ile başlayan bir x sayısının karesinin 20'den büyük olması durumuna kadar x sayısını print eder. Eğer x'in karesi 20'den büyük ise döngüyü sonlandırır.\n\n**Kullanım Alanları**\n\n-   **Belirli Bir Durum Gerçekleşene Kadar İşlem Yapma**: Kullanıcıdan belirli bir girdi alınana veya belirli bir durum gerçekleşene kadar işlem yapmak için kullanılabilir.\n\n-   **Kontrolsüz İşlemler**: Belirli bir durum gerçekleşene kadar döngünün devam etmesi gerektiği durumlarda kullanılabilir. Örneğin, rastgele sayılar üretilmesi gibi.\n\n::: callout-warning\n## Uyarı\n\n**`repeat`** döngüsü, belirli bir koşul doğru veya yanlış olmasına bakmadan işlem yapmaya devam eder. Ancak, döngü sonsuz olabilir, bu nedenle döngüyü belirli bir şart sağlandığında kırmak (**`break`** ifadesiyle) önemlidir.\n:::\n\n### next\n\n**`next`** ifadesi, döngülerde bir iterasyonu atlamak ve döngüyü devam ettirmek için kullanılır. Genellikle belirli bir koşul karşılandığında o iterasyonun işlenmesini atlamak için kullanılır.\n\n**`next`** ifadesinin kullanımı döngü içinde şu şekildedir:\n\n```{r}\n\nfor (i in 1:10) {\n  if (i %% 2 == 0) {\n    next  # Çift sayıları atla\n  }\n  print(i)\n}\n```\n\nBu örnekte, **`%%`** operatörü bir sayının diğerine bölümünden kalanı verir. Eğer bir sayı 2'ye bölündüğünde kalan 0 ise, o sayı çifttir. Yukarıdaki döngü, **`i`** çift sayı olduğunda **`next`** ifadesiyle o iterasyonu atlar ve döngüyü devam ettirir.\n\n**Kullanım Alanları**\n\n-   **Belirli Koşullarda İşlemleri Atlamak**: Döngü içinde belirli bir koşul sağlandığında o iterasyonu atlamak için kullanılabilir.\n\n-   **Veri Filtreleme**: Veri içinde belirli koşullara uymayan öğeleri atlamak için kullanılabilir. Örneğin, bir liste içinde belirli tipte öğeleri filtrelemek için.\n\n-   **Döngü Performansını İyileştirme**: Bazı durumlarda belirli koşulların sağlanması durumunda işlemleri atlayarak döngü performansını artırabilir.\n\n::: callout-note\n## Not\n\n**`next`** ifadesi, döngüler içinde belirli koşullarda iterasyonları atlamak ve döngüyü devam ettirmek için kullanılır. Bu sayede istenmeyen durumları veya öğeleri döngü içinde işlem yapmadan geçebilirsiniz.\n:::\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"output-file":"if_else_for.html"},"language":{"toc-title-document":"İçindekiler","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Yazar","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.25","editor":"visual","theme":{"light":"sandstone","dark":"cyborg"}},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":true,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"if_else_for.pdf"},"language":{"toc-title-document":"İçindekiler","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Yazar","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"block-headings":true,"editor":"visual","documentclass":"scrreprt"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","pdf"]}