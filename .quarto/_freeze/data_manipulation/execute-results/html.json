{
  "hash": "20498213da9b9dab329dc16143c875f6",
  "result": {
    "engine": "knitr",
    "markdown": "# Veri Manipulasyonu {#part-manipulation .unnumbered}\n\n![](images/dplyr.png){fig-align=\"center\"}\n\nVeri manipülasyonu, veri çerçeveleri üzerinde verileri dönüştürmek, filtrelemek, birleştirmek veya yeniden düzenlemek gibi işlemleri içeren önemli bir veri bilimi becerisidir. R programlama dili, veri manipülasyonu için oldukça güçlü ve esnek bir araç sunar. Bu yazıda, R kullanarak veri manipülasyonunu nasıl yapabileceğinizi öğreneceğiz.\n\nVeri manipülasyonu için R'da yaygın olarak kullanılan iki ana kavram, \"veri çerçeveleri\" ve \"paketler\"dir. Veri çerçeveleri, verileri tablo şeklinde düzenleyen ve işleyen veri yapılarıdır. R'da veri çerçeveleri, **`data.frame`** türünden nesnelerdir. Veri manipülasyonu için kullanabileceğiniz birçok paket vardır, ancak en yaygın kullanılanlar arasında **`dplyr`** ve **`tidyr`** bulunur. Bu paketler, veri manipülasyonunu kolaylaştırmak için bir dizi işlev içerir.\n\n**`dplyr`**, RStudio'dan Hadley Wickham tarafından geliştirilmiş ve en yaygın veri işleme zorluklarını çözmenize yardımcı olan bir veri işleme dilbilgisidir. **`dplyr`** paketi, **`devtools`** paketi ve `install_github()` fonksiyonu kullanılarak **CRAN**'**dan** veya **GitHub'dan** kurulabilir. GitHub deposu genellikle paketteki en son güncellemeleri ve geliştirme sürümünü içerir.\n\nCRAN sayfasından yüklemek için;\n\n```         \n> install.packages(\"dplyr\")\n```\n\nGitHub sayfasından yüklemek için;\n\n```         \n> install_github(\"hadley/dplyr\")\n```\n\ndplyr paketinde sıklıkla kullanılan fonksiyonlar şunlardır:\n\n-   **`select`** : veri çerçevesinden istenilen sütunları seçer.\n\n-   **`filter`** : mantıksal koşullara dayalı olarak bir veri çerçevesinden satırları filtreler.\n\n-   **`arrange`** : satıları sıralar.\n\n-   **`rename`** : sütun isimlerini yeniden isimlendirir.\n\n-   **`mutate`** : yeni değişkenler/sütunlar ekler veya mevcut değişkenleri dönüştürür.\n\n-   **`summarise/ summarize`** : veri çerçevesindeki farklı değişkenlerin özet istatistiklerini oluşturur\n\n-   **`%>%`** (pipe) operatörü birden çok eylemi ardışık düzende zincirleme şekilde birbirine bağlamak için kullanılır.\n\nVeri manipülasyonu ile örnekler için bazen küçük veri setleri oluşturulacaktır bazen de 2015 yılı ABD nüfus sayımına ilişkin [counties](https://github.com/MFatihTuzen/r-book-tr/blob/main/datasets/counties.rds) veri seti kullanılacaktır. Bu veri setinde eyalet ve şehir detayında nüfus, gelir, ırk, coğrafi yapı, işgücü gibi değişkenler yer almaktadır.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'dplyr' was built under R version 4.3.3\n```\n\n\n:::\n\n```{.r .cell-code}\ncounties <- readRDS(\"datasets/counties.rds\")\n\n# veri setinin yapısı hakkında bilgi sağlar\nglimpse(counties)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3,138\nColumns: 40\n$ census_id          <chr> \"1001\", \"1003\", \"1005\", \"1007\", \"1009\", \"1011\", \"10…\n$ state              <chr> \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alabam…\n$ county             <chr> \"Autauga\", \"Baldwin\", \"Barbour\", \"Bibb\", \"Blount\", …\n$ region             <chr> \"South\", \"South\", \"South\", \"South\", \"South\", \"South…\n$ metro              <chr> \"Metro\", \"Metro\", \"Nonmetro\", \"Metro\", \"Metro\", \"No…\n$ population         <dbl> 55221, 195121, 26932, 22604, 57710, 10678, 20354, 1…\n$ men                <dbl> 26745, 95314, 14497, 12073, 28512, 5660, 9502, 5627…\n$ women              <dbl> 28476, 99807, 12435, 10531, 29198, 5018, 10852, 603…\n$ hispanic           <dbl> 2.6, 4.5, 4.6, 2.2, 8.6, 4.4, 1.2, 3.5, 0.4, 1.5, 7…\n$ white              <dbl> 75.8, 83.1, 46.2, 74.5, 87.9, 22.2, 53.3, 73.0, 57.…\n$ black              <dbl> 18.5, 9.5, 46.7, 21.4, 1.5, 70.7, 43.8, 20.3, 40.3,…\n$ native             <dbl> 0.4, 0.6, 0.2, 0.4, 0.3, 1.2, 0.1, 0.2, 0.2, 0.6, 0…\n$ asian              <dbl> 1.0, 0.7, 0.4, 0.1, 0.1, 0.2, 0.4, 0.9, 0.8, 0.3, 0…\n$ pacific            <dbl> 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0…\n$ citizens           <dbl> 40725, 147695, 20714, 17495, 42345, 8057, 15581, 88…\n$ income             <dbl> 51281, 50254, 32964, 38678, 45813, 31938, 32229, 41…\n$ income_err         <dbl> 2391, 1263, 2973, 3995, 3141, 5884, 1793, 925, 2949…\n$ income_per_cap     <dbl> 24974, 27317, 16824, 18431, 20532, 17580, 18390, 21…\n$ income_per_cap_err <dbl> 1080, 711, 798, 1618, 708, 2055, 714, 489, 1366, 15…\n$ poverty            <dbl> 12.9, 13.4, 26.7, 16.8, 16.7, 24.6, 25.4, 20.5, 21.…\n$ child_poverty      <dbl> 18.6, 19.2, 45.3, 27.9, 27.2, 38.4, 39.2, 31.6, 37.…\n$ professional       <dbl> 33.2, 33.1, 26.8, 21.5, 28.5, 18.8, 27.5, 27.3, 23.…\n$ service            <dbl> 17.0, 17.7, 16.1, 17.9, 14.1, 15.0, 16.6, 17.7, 14.…\n$ office             <dbl> 24.2, 27.1, 23.1, 17.8, 23.9, 19.7, 21.9, 24.2, 26.…\n$ construction       <dbl> 8.6, 10.8, 10.8, 19.0, 13.5, 20.1, 10.3, 10.5, 11.5…\n$ production         <dbl> 17.1, 11.2, 23.1, 23.7, 19.9, 26.4, 23.7, 20.4, 24.…\n$ drive              <dbl> 87.5, 84.7, 83.8, 83.2, 84.9, 74.9, 84.5, 85.3, 85.…\n$ carpool            <dbl> 8.8, 8.8, 10.9, 13.5, 11.2, 14.9, 12.4, 9.4, 11.9, …\n$ transit            <dbl> 0.1, 0.1, 0.4, 0.5, 0.4, 0.7, 0.0, 0.2, 0.2, 0.2, 0…\n$ walk               <dbl> 0.5, 1.0, 1.8, 0.6, 0.9, 5.0, 0.8, 1.2, 0.3, 0.6, 1…\n$ other_transp       <dbl> 1.3, 1.4, 1.5, 1.5, 0.4, 1.7, 0.6, 1.2, 0.4, 0.7, 1…\n$ work_at_home       <dbl> 1.8, 3.9, 1.6, 0.7, 2.3, 2.8, 1.7, 2.7, 2.1, 2.5, 1…\n$ mean_commute       <dbl> 26.5, 26.4, 24.1, 28.8, 34.9, 27.5, 24.6, 24.1, 25.…\n$ employed           <dbl> 23986, 85953, 8597, 8294, 22189, 3865, 7813, 47401,…\n$ private_work       <dbl> 73.6, 81.5, 71.8, 76.8, 82.0, 79.5, 77.4, 74.1, 85.…\n$ public_work        <dbl> 20.9, 12.3, 20.8, 16.1, 13.5, 15.1, 16.2, 20.8, 12.…\n$ self_employed      <dbl> 5.5, 5.8, 7.3, 6.7, 4.2, 5.4, 6.2, 5.0, 2.8, 7.9, 4…\n$ family_work        <dbl> 0.0, 0.4, 0.1, 0.4, 0.4, 0.0, 0.2, 0.1, 0.0, 0.5, 0…\n$ unemployment       <dbl> 7.6, 7.5, 17.6, 8.3, 7.7, 18.0, 10.9, 12.3, 8.9, 7.…\n$ land_area          <dbl> 594.44, 1589.78, 884.88, 622.58, 644.78, 622.81, 77…\n```\n\n\n:::\n:::\n\n\n## Değişken Seçme - `select`\n\nTabloyu (veri çerçevesi) seçmek ve dönüştürmek için R'da **`dplyr`** paketinde bulunan **`select()`** fonksiyonu oldukça kullanışlıdır. Bu fonksiyon, belirli sütunları seçmek veya sütun adlarını değiştirmek için kullanılır. **`select()`** fonksiyonunu kullanarak veri çerçevesinde sütunları seçme ve dönüştürme işlemlerinin nasıl yapıldığına dair aşağıda örnekler mevcuttur.\n\n::: callout-note\n### Not\n\n**`select()`** fonksiyonu ayrıca sütunları seçerken veya döndürürken bazı özel işlevler de kullanmanıza olanak tanır. Örneğin, **`starts_with()`**, **`ends_with()`**, **`contains()`** gibi işlevleri kullanarak sütun adlarının belirli bir örüntüyü karşılayanları seçebilirsiniz. Bu fonksiyon, veri manipülasyonu işlemlerinde oldukça kullanışlıdır ve veri çerçevelerini istediğiniz şekilde özelleştirmenize yardımcı olur.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# belirli sütunları seçmek\ncounties %>%\nselect(state, county, population, unemployment)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 4\n   state   county   population unemployment\n   <chr>   <chr>         <dbl>        <dbl>\n 1 Alabama Autauga       55221          7.6\n 2 Alabama Baldwin      195121          7.5\n 3 Alabama Barbour       26932         17.6\n 4 Alabama Bibb          22604          8.3\n 5 Alabama Blount        57710          7.7\n 6 Alabama Bullock       10678         18  \n 7 Alabama Butler        20354         10.9\n 8 Alabama Calhoun      116648         12.3\n 9 Alabama Chambers      34079          8.9\n10 Alabama Cherokee      26008          7.9\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# belli aralıkta bütün sütunların seçilmesi\ncounties %>%\nselect(state, county, drive:work_at_home)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 8\n   state   county   drive carpool transit  walk other_transp work_at_home\n   <chr>   <chr>    <dbl>   <dbl>   <dbl> <dbl>        <dbl>        <dbl>\n 1 Alabama Autauga   87.5     8.8     0.1   0.5          1.3          1.8\n 2 Alabama Baldwin   84.7     8.8     0.1   1            1.4          3.9\n 3 Alabama Barbour   83.8    10.9     0.4   1.8          1.5          1.6\n 4 Alabama Bibb      83.2    13.5     0.5   0.6          1.5          0.7\n 5 Alabama Blount    84.9    11.2     0.4   0.9          0.4          2.3\n 6 Alabama Bullock   74.9    14.9     0.7   5            1.7          2.8\n 7 Alabama Butler    84.5    12.4     0     0.8          0.6          1.7\n 8 Alabama Calhoun   85.3     9.4     0.2   1.2          1.2          2.7\n 9 Alabama Chambers  85.1    11.9     0.2   0.3          0.4          2.1\n10 Alabama Cherokee  83.9    12.1     0.2   0.6          0.7          2.5\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# belirli bir ifadeyi içeren sütunları seçmek\ncounties %>%\nselect(state, county, contains(\"employed\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 4\n   state   county   employed self_employed\n   <chr>   <chr>       <dbl>         <dbl>\n 1 Alabama Autauga     23986           5.5\n 2 Alabama Baldwin     85953           5.8\n 3 Alabama Barbour      8597           7.3\n 4 Alabama Bibb         8294           6.7\n 5 Alabama Blount      22189           4.2\n 6 Alabama Bullock      3865           5.4\n 7 Alabama Butler       7813           6.2\n 8 Alabama Calhoun     47401           5  \n 9 Alabama Chambers    13689           2.8\n10 Alabama Cherokee    10155           7.9\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# belirli bir ifade ile başyalan sütunları seçmek\ncounties %>%\nselect(state, county, starts_with(\"income\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 6\n   state   county   income income_err income_per_cap income_per_cap_err\n   <chr>   <chr>     <dbl>      <dbl>          <dbl>              <dbl>\n 1 Alabama Autauga   51281       2391          24974               1080\n 2 Alabama Baldwin   50254       1263          27317                711\n 3 Alabama Barbour   32964       2973          16824                798\n 4 Alabama Bibb      38678       3995          18431               1618\n 5 Alabama Blount    45813       3141          20532                708\n 6 Alabama Bullock   31938       5884          17580               2055\n 7 Alabama Butler    32229       1793          18390                714\n 8 Alabama Calhoun   41703        925          21374                489\n 9 Alabama Chambers  34177       2949          21071               1366\n10 Alabama Cherokee  36296       1710          21811               1556\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# belirli bir ifade ile biten sütunları seçmek\ncounties %>%\nselect(state, county, ends_with(\"work\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 5\n   state   county   private_work public_work family_work\n   <chr>   <chr>           <dbl>       <dbl>       <dbl>\n 1 Alabama Autauga          73.6        20.9         0  \n 2 Alabama Baldwin          81.5        12.3         0.4\n 3 Alabama Barbour          71.8        20.8         0.1\n 4 Alabama Bibb             76.8        16.1         0.4\n 5 Alabama Blount           82          13.5         0.4\n 6 Alabama Bullock          79.5        15.1         0  \n 7 Alabama Butler           77.4        16.2         0.2\n 8 Alabama Calhoun          74.1        20.8         0.1\n 9 Alabama Chambers         85.1        12.1         0  \n10 Alabama Cherokee         73.1        18.5         0.5\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# belirli sütunları hariç tutarak seçmek\ncounties %>%\nselect(census_id:population,-c(men:land_area))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 6\n   census_id state   county   region metro    population\n   <chr>     <chr>   <chr>    <chr>  <chr>         <dbl>\n 1 1001      Alabama Autauga  South  Metro         55221\n 2 1003      Alabama Baldwin  South  Metro        195121\n 3 1005      Alabama Barbour  South  Nonmetro      26932\n 4 1007      Alabama Bibb     South  Metro         22604\n 5 1009      Alabama Blount   South  Metro         57710\n 6 1011      Alabama Bullock  South  Nonmetro      10678\n 7 1013      Alabama Butler   South  Nonmetro      20354\n 8 1015      Alabama Calhoun  South  Metro        116648\n 9 1017      Alabama Chambers South  Nonmetro      34079\n10 1019      Alabama Cherokee South  Nonmetro      26008\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# belirli veri tipindeki sütunları seçmek\ncounties %>%\nselect(where(is.character))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 5\n   census_id state   county   region metro   \n   <chr>     <chr>   <chr>    <chr>  <chr>   \n 1 1001      Alabama Autauga  South  Metro   \n 2 1003      Alabama Baldwin  South  Metro   \n 3 1005      Alabama Barbour  South  Nonmetro\n 4 1007      Alabama Bibb     South  Metro   \n 5 1009      Alabama Blount   South  Metro   \n 6 1011      Alabama Bullock  South  Nonmetro\n 7 1013      Alabama Butler   South  Nonmetro\n 8 1015      Alabama Calhoun  South  Metro   \n 9 1017      Alabama Chambers South  Nonmetro\n10 1019      Alabama Cherokee South  Nonmetro\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# select ile kolon adı değiştirmek\ncounties %>%\nselect(census_id,pop = population)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 2\n   census_id    pop\n   <chr>      <dbl>\n 1 1001       55221\n 2 1003      195121\n 3 1005       26932\n 4 1007       22604\n 5 1009       57710\n 6 1011       10678\n 7 1013       20354\n 8 1015      116648\n 9 1017       34079\n10 1019       26008\n# ℹ 3,128 more rows\n```\n\n\n:::\n:::\n\n\n## Veri Sıralama - `arrange`\n\n**`dplyr`** paketinde bulunan **`arrange()`** fonksiyonu, veri çerçevesindeki satırları belirli bir sıraya göre düzenlemek için kullanılır. Bu sıralama işlemi, bir veya daha fazla sütunun değerlerine göre yapılabilir. **`arrange()`** fonksiyonu, veri analizi ve veri keşfi sırasında verilerinizi anlamak ve analiz etmek için önemli bir araçtır.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncounties_selected <- counties %>%\nselect(state, county, population, unemployment)\n\n# artan sıralama (ascending)\ncounties_selected %>%\narrange(population)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 4\n   state      county    population unemployment\n   <chr>      <chr>          <dbl>        <dbl>\n 1 Hawaii     Kalawao           85          0  \n 2 Texas      King             267          5.1\n 3 Nebraska   McPherson        433          0.9\n 4 Montana    Petroleum        443          6.6\n 5 Nebraska   Arthur           448          4  \n 6 Nebraska   Loup             548          0.7\n 7 Nebraska   Blaine           551          0.7\n 8 New Mexico Harding          565          6  \n 9 Texas      Kenedy           565          0  \n10 Colorado   San Juan         606         13.8\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# azalan sıralama (descending)\ncounties_selected %>%\narrange(desc(population))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 4\n   state      county      population unemployment\n   <chr>      <chr>            <dbl>        <dbl>\n 1 California Los Angeles   10038388         10  \n 2 Illinois   Cook           5236393         10.7\n 3 Texas      Harris         4356362          7.5\n 4 Arizona    Maricopa       4018143          7.7\n 5 California San Diego      3223096          8.7\n 6 California Orange         3116069          7.6\n 7 Florida    Miami-Dade     2639042         10  \n 8 New York   Kings          2595259         10  \n 9 Texas      Dallas         2485003          7.6\n10 New York   Queens         2301139          8.6\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# birden fazla sütun seçerek sıralama\ncounties_selected %>%\narrange(state,desc(population))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 4\n   state   county     population unemployment\n   <chr>   <chr>           <dbl>        <dbl>\n 1 Alabama Jefferson      659026          9.1\n 2 Alabama Mobile         414251          9.8\n 3 Alabama Madison        346438          8.5\n 4 Alabama Montgomery     228138          8.8\n 5 Alabama Shelby         203530          5.5\n 6 Alabama Tuscaloosa     200458          7.6\n 7 Alabama Baldwin        195121          7.5\n 8 Alabama Lee            150982          7.3\n 9 Alabama Morgan         119786          9.9\n10 Alabama Calhoun        116648         12.3\n# ℹ 3,128 more rows\n```\n\n\n:::\n:::\n\n\n## Veri Filtreleme - `filter`\n\n**`dplyr`** paketindeki **`filter()`** fonksiyonu, veri çerçevesinde belirli bir koşulu karşılayan satırları seçmek için kullanılır. Bu fonksiyon, veri analizi sırasında verilerinizi filtrelemek ve istediğiniz verileri elde etmek için oldukça kullanışlıdır. **`filter()`** fonksiyonu, veri çerçevesindeki satırları seçerken belirli sütunlardaki değerlere dayalı koşulları uygulamanıza olanak tanır.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# sadece New York'u filtrele\ncounties_selected %>%\narrange(desc(population)) %>%\nfilter(state == \"New York\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 62 × 4\n   state    county      population unemployment\n   <chr>    <chr>            <dbl>        <dbl>\n 1 New York Kings          2595259         10  \n 2 New York Queens         2301139          8.6\n 3 New York New York       1629507          7.5\n 4 New York Suffolk        1501373          6.4\n 5 New York Bronx          1428357         14  \n 6 New York Nassau         1354612          6.4\n 7 New York Westchester     967315          7.6\n 8 New York Erie            921584          7  \n 9 New York Monroe          749356          7.7\n10 New York Richmond        472481          6.9\n# ℹ 52 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# işsizlik oranı 6'dan küçük olanları filtrele\ncounties_selected %>%\narrange(desc(population)) %>%\nfilter(unemployment < 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 949 × 4\n   state    county       population unemployment\n   <chr>    <chr>             <dbl>        <dbl>\n 1 Virginia Fairfax         1128722          4.9\n 2 Utah     Salt Lake       1078958          5.8\n 3 Hawaii   Honolulu         984178          5.6\n 4 Texas    Collin           862215          4.9\n 5 Texas    Denton           731851          5.7\n 6 Texas    Fort Bend        658331          5.1\n 7 Kansas   Johnson          566814          4.5\n 8 Maryland Anne Arundel     555280          5.9\n 9 Colorado Jefferson        552344          5.9\n10 Utah     Utah             551957          5.5\n# ℹ 939 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# birden fazla koşul\ncounties_selected %>%\narrange(desc(population)) %>%\nfilter(state == \"New York\",unemployment < 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  state    county     population unemployment\n  <chr>    <chr>           <dbl>        <dbl>\n1 New York Tompkins       103855          5.9\n2 New York Chemung         88267          5.4\n3 New York Madison         72427          5.1\n4 New York Livingston      64801          5.4\n5 New York Seneca          35144          5.5\n```\n\n\n:::\n\n```{.r .cell-code}\n# veya kullanımı\ncounties_selected %>%\narrange(desc(population)) %>%\nfilter(state == \"New York\"| unemployment < 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,006 × 4\n   state    county      population unemployment\n   <chr>    <chr>            <dbl>        <dbl>\n 1 New York Kings          2595259         10  \n 2 New York Queens         2301139          8.6\n 3 New York New York       1629507          7.5\n 4 New York Suffolk        1501373          6.4\n 5 New York Bronx          1428357         14  \n 6 New York Nassau         1354612          6.4\n 7 Virginia Fairfax        1128722          4.9\n 8 Utah     Salt Lake      1078958          5.8\n 9 Hawaii   Honolulu        984178          5.6\n10 New York Westchester     967315          7.6\n# ℹ 996 more rows\n```\n\n\n:::\n:::\n\n\n## Değişken Güncelleme ve Oluşturma- `mutate`\n\n**`dplyr`** paketindeki **`mutate()`** fonksiyonu, bir veri çerçevesinde yeni sütunlar oluşturmak veya mevcut sütunları dönüştürmek için kullanılır. Bu fonksiyon, veri çerçevesindeki herhangi bir sütunu işleyerek yeni bilgiler eklemenize veya mevcut sütunları değiştirmenize olanak tanır. **`mutate()`** fonksiyonu, veri analizi sırasında verilerinizi özelleştirmek için oldukça kullanışlıdır.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# işsiz nüfus sayısına ilişkin değişken üretme\ncounties_selected %>%\nmutate(unemployed_population = population * unemployment / 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 5\n   state   county   population unemployment unemployed_population\n   <chr>   <chr>         <dbl>        <dbl>                 <dbl>\n 1 Alabama Autauga       55221          7.6                 4197.\n 2 Alabama Baldwin      195121          7.5                14634.\n 3 Alabama Barbour       26932         17.6                 4740.\n 4 Alabama Bibb          22604          8.3                 1876.\n 5 Alabama Blount        57710          7.7                 4444.\n 6 Alabama Bullock       10678         18                   1922.\n 7 Alabama Butler        20354         10.9                 2219.\n 8 Alabama Calhoun      116648         12.3                14348.\n 9 Alabama Chambers      34079          8.9                 3033.\n10 Alabama Cherokee      26008          7.9                 2055.\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# yeni sütun ekle\ncounties_selected %>%\nmutate(unemployed_population = population * unemployment / 100) %>%\narrange(desc(unemployed_population))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 5\n   state      county         population unemployment unemployed_population\n   <chr>      <chr>               <dbl>        <dbl>                 <dbl>\n 1 California Los Angeles      10038388         10                1003839.\n 2 Illinois   Cook              5236393         10.7               560294.\n 3 Texas      Harris            4356362          7.5               326727.\n 4 Arizona    Maricopa          4018143          7.7               309397.\n 5 California Riverside         2298032         12.9               296446.\n 6 California San Diego         3223096          8.7               280409.\n 7 Michigan   Wayne             1778969         14.9               265066.\n 8 California San Bernardino    2094769         12.6               263941.\n 9 Florida    Miami-Dade        2639042         10                 263904.\n10 New York   Kings             2595259         10                 259526.\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# var olan sütunu güncelle\ncounties %>%\n  select(state, county, population, men,women) %>% \nmutate(population = men + women)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 5\n   state   county   population   men women\n   <chr>   <chr>         <dbl> <dbl> <dbl>\n 1 Alabama Autauga       55221 26745 28476\n 2 Alabama Baldwin      195121 95314 99807\n 3 Alabama Barbour       26932 14497 12435\n 4 Alabama Bibb          22604 12073 10531\n 5 Alabama Blount        57710 28512 29198\n 6 Alabama Bullock       10678  5660  5018\n 7 Alabama Butler        20354  9502 10852\n 8 Alabama Calhoun      116648 56274 60374\n 9 Alabama Chambers      34079 16258 17821\n10 Alabama Cherokee      26008 12975 13033\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# birden fazla yeni değişken üretme\ncounties %>%\n  select(state, county, population, men,women) %>% \nmutate(men_ratio = men/population*100,\n       women_ratio = women/population*100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 7\n   state   county   population   men women men_ratio women_ratio\n   <chr>   <chr>         <dbl> <dbl> <dbl>     <dbl>       <dbl>\n 1 Alabama Autauga       55221 26745 28476      48.4        51.6\n 2 Alabama Baldwin      195121 95314 99807      48.8        51.2\n 3 Alabama Barbour       26932 14497 12435      53.8        46.2\n 4 Alabama Bibb          22604 12073 10531      53.4        46.6\n 5 Alabama Blount        57710 28512 29198      49.4        50.6\n 6 Alabama Bullock       10678  5660  5018      53.0        47.0\n 7 Alabama Butler        20354  9502 10852      46.7        53.3\n 8 Alabama Calhoun      116648 56274 60374      48.2        51.8\n 9 Alabama Chambers      34079 16258 17821      47.7        52.3\n10 Alabama Cherokee      26008 12975 13033      49.9        50.1\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# transmute sadece yeni eklenen değişkenleri gösterir\n\ncounties %>%\n  select(state, county, population, men,women) %>% \ntransmute(men_ratio = men/population*100,\n       women_ratio = women/population*100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 2\n   men_ratio women_ratio\n       <dbl>       <dbl>\n 1      48.4        51.6\n 2      48.8        51.2\n 3      53.8        46.2\n 4      53.4        46.6\n 5      49.4        50.6\n 6      53.0        47.0\n 7      46.7        53.3\n 8      48.2        51.8\n 9      47.7        52.3\n10      49.9        50.1\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# mutate_at ile koşula göre birden fazla değişkene aynı fonksiyon uygulanabilir.\nscale2 <- function(x, na.rm = FALSE) (x - mean(x, na.rm = na.rm)) / sd(x, na.rm)\n\ncounties_selected %>% \n  mutate_at(c(\"population\",\"unemployment\"),scale2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 4\n   state   county   population unemployment\n   <chr>   <chr>         <dbl>        <dbl>\n 1 Alabama Autauga     -0.141       -0.0563\n 2 Alabama Baldwin      0.292       -0.0846\n 3 Alabama Barbour     -0.228        2.78  \n 4 Alabama Bibb        -0.242        0.142 \n 5 Alabama Blount      -0.133       -0.0279\n 6 Alabama Bullock     -0.278        2.89  \n 7 Alabama Butler      -0.249        0.880 \n 8 Alabama Calhoun      0.0495       1.28  \n 9 Alabama Chambers    -0.206        0.313 \n10 Alabama Cherokee    -0.231        0.0288\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\ncounties_selected %>% # birden fazla argüman kullanımı\n  mutate_at(c(\"population\",\"unemployment\"),scale2,na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 4\n   state   county   population unemployment\n   <chr>   <chr>         <dbl>        <dbl>\n 1 Alabama Autauga     -0.141       -0.0563\n 2 Alabama Baldwin      0.292       -0.0846\n 3 Alabama Barbour     -0.228        2.78  \n 4 Alabama Bibb        -0.242        0.142 \n 5 Alabama Blount      -0.133       -0.0279\n 6 Alabama Bullock     -0.278        2.89  \n 7 Alabama Butler      -0.249        0.880 \n 8 Alabama Calhoun      0.0495       1.28  \n 9 Alabama Chambers    -0.206        0.313 \n10 Alabama Cherokee    -0.231        0.0288\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# mutate_if ile koşula göre birden fazla değişkende değişiklik yapılabilir.\nstr(counties_selected)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [3,138 × 4] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ state       : chr [1:3138] \"Alabama\" \"Alabama\" \"Alabama\" \"Alabama\" ...\n $ county      : chr [1:3138] \"Autauga\" \"Baldwin\" \"Barbour\" \"Bibb\" ...\n $ population  : num [1:3138] 55221 195121 26932 22604 57710 ...\n $ unemployment: num [1:3138] 7.6 7.5 17.6 8.3 7.7 18 10.9 12.3 8.9 7.9 ...\n```\n\n\n:::\n\n```{.r .cell-code}\ncounties_selected <- counties_selected %>% \n  mutate_if(is.character,as.factor)\n\nstr(counties_selected)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [3,138 × 4] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ state       : Factor w/ 50 levels \"Alabama\",\"Alaska\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ county      : Factor w/ 1847 levels \"Abbeville\",\"Acadia\",..: 82 89 100 149 164 225 235 246 293 315 ...\n $ population  : num [1:3138] 55221 195121 26932 22604 57710 ...\n $ unemployment: num [1:3138] 7.6 7.5 17.6 8.3 7.7 18 10.9 12.3 8.9 7.9 ...\n```\n\n\n:::\n\n```{.r .cell-code}\ncounties_selected %>% \n  mutate_if(is.numeric, scale2, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 4\n   state   county   population unemployment\n   <fct>   <fct>         <dbl>        <dbl>\n 1 Alabama Autauga     -0.141       -0.0563\n 2 Alabama Baldwin      0.292       -0.0846\n 3 Alabama Barbour     -0.228        2.78  \n 4 Alabama Bibb        -0.242        0.142 \n 5 Alabama Blount      -0.133       -0.0279\n 6 Alabama Bullock     -0.278        2.89  \n 7 Alabama Butler      -0.249        0.880 \n 8 Alabama Calhoun      0.0495       1.28  \n 9 Alabama Chambers    -0.206        0.313 \n10 Alabama Cherokee    -0.231        0.0288\n# ℹ 3,128 more rows\n```\n\n\n:::\n:::\n\n\n::: callout-warning\n### Dikkat\n\n**`mutate()`** ve **`transmute()`** fonksiyonları, **`dplyr`** paketinde veri çerçevelerini işlerken kullanılan iki farklı fonksiyondur. Her ikisi de yeni sütunlar oluşturmanıza veya mevcut sütunları dönüştürmenize olanak tanır, ancak aralarındaki temel fark işlevlerinin dönüş değerleridir. Ancak kullanırken aşağıda belirtilen hususlara dikkat etmek gerekir:\n\n-   **`mutate()`**, veri çerçevesine yeni sütunlar eklerken, orijinal veri çerçevesini değiştirmez. Yani, yeni sütunlar eklerken orijinal veri çerçevesinin boyutu artar. **`mutate()`** fonksiyonu, orijinal veri çerçevesini döndürürken eklenen sütunlarla birlikte veriyi içeren yeni bir veri çerçevesi döndürür.\n\n-   **`transmute()`**, yeni sütunlar oluştururken orijinal veri çerçevesini değiştirmez. Ancak, **`transmute()`** fonksiyonu yalnızca belirtilen sütunları ve yeni sütunları içeren bir veri çerçevesi döndürür. Diğer orijinal sütunlar bu yeni veri çerçevesinde yer almaz. Bu, veri çerçevesini daha küçük ve özgünleştirilmiş bir hale getirir.\n:::\n\n### Koşullu Değişken Oluşturma - `case_when`\n\n**`case_when()`** fonksiyonu, R programlama dilinde **`dplyr`** paketi içinde bulunan ve çoklu koşullara dayalı olarak yeni bir sütun oluşturmak veya mevcut bir sütunu dönüştürmek için kullanılan bir fonksiyondur. Bu fonksiyon, özellikle veri çerçevelerinde veya veri tablolarında, belirli koşullara dayalı olarak işlem yapmanız gerektiğinde oldukça kullanışlıdır. **`case_when()`** fonksiyonu, birden fazla koşulu kontrol ederek her bir koşula uygun bir değer veya işlem döndürmenizi sağlar. **`case_when()`** fonksiyonu, bir veya daha fazla koşul ifadesi ve bu koşullara karşılık gelecek değerler içeren çiftlerin bir listesini alır. Bu çiftler, **`~`** operatörü ile ayrılır.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Örnek bir veri çerçevesi oluşturalım\nveri <- data.frame(\n  Ogrenci_Ad = c(\"Ali\", \"Esra\", \"Erkan\", \"Derya\"),\n  Puan = c(90, 75, 60, 80)\n)\n\n# Yeni bir sütun oluşturma: Puan kategorisi\nveri <- veri %>%\n  mutate(Puan_Kategorisi = case_when(\n    Puan >= 90 ~ \"AA\",\n    Puan >= 80 ~ \"BA\",\n    Puan >= 70 ~ \"BB\",\n    Puan >= 60 ~ \"CB\",\n    TRUE ~ \"FF\"  # Tüm diğer durumlar için\n  ))\n\nprint(veri)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Ogrenci_Ad Puan Puan_Kategorisi\n1        Ali   90              AA\n2       Esra   75              BB\n3      Erkan   60              CB\n4      Derya   80              BA\n```\n\n\n:::\n:::\n\n\n**`case_when()`** fonksiyonunu birden fazla koşul ile kullanabilirsiniz. Koşullar yukarıdan aşağıya sırayla kontrol edilir ve ilk koşulu sağlayan değer kullanılır.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nveri <- veri %>%\n  mutate(Not_Durumu = case_when(\n    Puan >= 90 ~ \"Geçti\",\n    Puan >= 60 & Puan < 70 ~ \"Şartlı Geçti\",\n    Puan < 60 ~ \"Kaldı\",\n    TRUE ~ \"Bilinmiyor\"  # Tüm diğer durumlar için\n  ))\n\nveri\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Ogrenci_Ad Puan Puan_Kategorisi   Not_Durumu\n1        Ali   90              AA        Geçti\n2       Esra   75              BB   Bilinmiyor\n3      Erkan   60              CB Şartlı Geçti\n4      Derya   80              BA   Bilinmiyor\n```\n\n\n:::\n:::\n\n\n## Değişken İsimlendirme - `rename`\n\n**`rename()`** fonksiyonu, R programlama dilinde veri çerçevesi içindeki sütunların adlarını değiştirmek için kullanılır. Veri çerçevesi sütunlarının daha açıklayıcı veya kullanıcı dostu adlara sahip olmasını sağlar. Bu, veri analizi ve raporlama süreçlerini daha anlaşılır ve düzenli hale getirmenize yardımcı olabilir.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# yeniden isimlendirmede eşitliği sol tarafı yeni isim olmalı\ncounties_selected %>%\nrename(unemployment_rate = unemployment)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 4\n   state   county   population unemployment_rate\n   <fct>   <fct>         <dbl>             <dbl>\n 1 Alabama Autauga       55221               7.6\n 2 Alabama Baldwin      195121               7.5\n 3 Alabama Barbour       26932              17.6\n 4 Alabama Bibb          22604               8.3\n 5 Alabama Blount        57710               7.7\n 6 Alabama Bullock       10678              18  \n 7 Alabama Butler        20354              10.9\n 8 Alabama Calhoun      116648              12.3\n 9 Alabama Chambers      34079               8.9\n10 Alabama Cherokee      26008               7.9\n# ℹ 3,128 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# select ile beraber de yeniden isimlendirme yapılabilir\ncounties_selected %>%\nselect(state, county, population, unemployment_rate = unemployment)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,138 × 4\n   state   county   population unemployment_rate\n   <fct>   <fct>         <dbl>             <dbl>\n 1 Alabama Autauga       55221               7.6\n 2 Alabama Baldwin      195121               7.5\n 3 Alabama Barbour       26932              17.6\n 4 Alabama Bibb          22604               8.3\n 5 Alabama Blount        57710               7.7\n 6 Alabama Bullock       10678              18  \n 7 Alabama Butler        20354              10.9\n 8 Alabama Calhoun      116648              12.3\n 9 Alabama Chambers      34079               8.9\n10 Alabama Cherokee      26008               7.9\n# ℹ 3,128 more rows\n```\n\n\n:::\n:::\n\n\n::: callout-caution\n### Dikkat\n\n**`rename`** fonksiyonunda eşitliğin sol tarafına yeni isim, sağ tarafına ise önceki isim yazılır.\n:::\n\n## Verileri Sayma - `count`\n\n**`count()`** fonksiyonu, R programlama dilindeki **`dplyr`** paketinde bulunan ve belirli bir sütuna göre veri çerçevesindeki gözlemlerin sayısını hesaplamak için kullanılan bir fonksiyondur. Bu fonksiyon, veri çerçevesindeki belirli bir kategorik değişkenin benzersiz değerlerini ve her bir değer için kaç gözlemin olduğunu hesaplamak için oldukça kullanışlıdır.\n\n**`count()`** fonksiyonu, veri analizi sürecinde veri özeti oluşturmak ve belirli bir değişkenin frekansını görmek için sıkça kullanılır. Ayrıca, veri çerçevesindeki her bir kategorik değeri ve bu değerlere ait gözlem sayılarını içeren yeni bir veri çerçevesi döndürür.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# count ile veri setinde sayma işlemleri yapılır\ncounties %>%\ncount()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n      n\n  <int>\n1  3138\n```\n\n\n:::\n\n```{.r .cell-code}\n# state dağılımını elde etmek\ncounties %>%\ncount(state)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 2\n   state           n\n   <chr>       <int>\n 1 Alabama        67\n 2 Alaska         28\n 3 Arizona        15\n 4 Arkansas       75\n 5 California     58\n 6 Colorado       64\n 7 Connecticut     8\n 8 Delaware        3\n 9 Florida        67\n10 Georgia       159\n# ℹ 40 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# sort = TRUE ile büyükten küçüge sıralama yapılabilir\ncounties %>%\ncount(state, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 2\n   state              n\n   <chr>          <int>\n 1 Texas            253\n 2 Georgia          159\n 3 Virginia         133\n 4 Kentucky         120\n 5 Missouri         115\n 6 Kansas           105\n 7 Illinois         102\n 8 North Carolina   100\n 9 Iowa              99\n10 Tennessee         95\n# ℹ 40 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# wt argümanı ile değişken toplamları hesaplanabilir\ncounties %>%\ncount(state, wt = population, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 2\n   state                 n\n   <chr>             <dbl>\n 1 California     38421464\n 2 Texas          26538497\n 3 New York       19673174\n 4 Florida        19645772\n 5 Illinois       12873761\n 6 Pennsylvania   12779559\n 7 Ohio           11575977\n 8 Georgia        10006693\n 9 Michigan        9900571\n10 North Carolina  9845333\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n\n## Veri Özetleme - `summarize`\n\n**`group_by()`** ve **`summarize()`** fonksiyonları, R programlama dilinde veri çerçevesi üzerinde gruplama ve özetleme işlemleri yapmak için kullanılan önemli **`dplyr`** fonksiyonlarıdır. Bu fonksiyonlar, veri analizi sürecinde verilerinizi daha iyi anlamak ve özetlemek için oldukça güçlü araçlardır.\n\n**`group_by()`** fonksiyonu, veri çerçevesindeki verileri belirli bir sütuna veya birden fazla sütuna göre gruplamak için kullanılır. Bu gruplandırma işlemi, veriyi belirli bir kategoriye veya sınıfa göre ayırmak için kullanılır.\n\n**`summarize()`** fonksiyonu, gruplanmış veri üzerinde istatistiksel veya özetleyici işlemler yapmak için kullanılır. Bu fonksiyon, belirli bir grup için özet bilgileri hesaplamak için kullanılır.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncounties %>%\nsummarize(total_population = sum(population))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  total_population\n             <dbl>\n1        315845353\n```\n\n\n:::\n\n```{.r .cell-code}\ncounties %>%\nsummarize(total_population = sum(population),\naverage_unemployment = mean(unemployment))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  total_population average_unemployment\n             <dbl>                <dbl>\n1        315845353                 7.80\n```\n\n\n:::\n\n```{.r .cell-code}\n# istenilen düzeye göre hesaplamalar group_by ile yapılır\ncounties %>%\ngroup_by(state) %>%\nsummarize(total_pop = sum(population),\naverage_unemployment = sum(unemployment))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 3\n   state       total_pop average_unemployment\n   <chr>           <dbl>                <dbl>\n 1 Alabama       4830620                758. \n 2 Alaska         725461                257. \n 3 Arizona       6641928                180. \n 4 Arkansas      2958208                674. \n 5 California   38421464                626. \n 6 Colorado      5278906                477. \n 7 Connecticut   3593222                 65.3\n 8 Delaware       926454                 23.8\n 9 Florida      19645772                696. \n10 Georgia      10006693               1586. \n# ℹ 40 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\ncounties %>%\ngroup_by(state) %>%\nsummarize(total_pop = sum(population),\naverage_unemployment = mean(unemployment)) %>%\narrange(desc(average_unemployment))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 3\n   state          total_pop average_unemployment\n   <chr>              <dbl>                <dbl>\n 1 Mississippi      2988081                12.0 \n 2 Arizona          6641928                12.0 \n 3 South Carolina   4777576                11.3 \n 4 Alabama          4830620                11.3 \n 5 California      38421464                10.8 \n 6 Nevada           2798636                10.5 \n 7 North Carolina   9845333                10.5 \n 8 Florida         19645772                10.4 \n 9 Georgia         10006693                 9.97\n10 Michigan         9900571                 9.96\n# ℹ 40 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# birden fazla değişken düzeyinde gruplama\ncounties %>%\ngroup_by(state, metro) %>%\nsummarize(total_pop = sum(population))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'state'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 97 × 3\n# Groups:   state [50]\n   state      metro    total_pop\n   <chr>      <chr>        <dbl>\n 1 Alabama    Metro      3671377\n 2 Alabama    Nonmetro   1159243\n 3 Alaska     Metro       494990\n 4 Alaska     Nonmetro    230471\n 5 Arizona    Metro      6295145\n 6 Arizona    Nonmetro    346783\n 7 Arkansas   Metro      1806867\n 8 Arkansas   Nonmetro   1151341\n 9 California Metro     37587429\n10 California Nonmetro    834035\n# ℹ 87 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# elde edilen veri üzerinden devam edilecekse ungroup kullanılmalı.\n# ungroup kullanılmazsa sonradan yapılan işlemler group_by değişkenleri düzeyinde\n# devam eder\n\ncounties %>%\ngroup_by(state, metro) %>%\nsummarize(total_pop = sum(population)) %>%\nungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'state'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 97 × 3\n   state      metro    total_pop\n   <chr>      <chr>        <dbl>\n 1 Alabama    Metro      3671377\n 2 Alabama    Nonmetro   1159243\n 3 Alaska     Metro       494990\n 4 Alaska     Nonmetro    230471\n 5 Arizona    Metro      6295145\n 6 Arizona    Nonmetro    346783\n 7 Arkansas   Metro      1806867\n 8 Arkansas   Nonmetro   1151341\n 9 California Metro     37587429\n10 California Nonmetro    834035\n# ℹ 87 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# top_n en yüksek ya da en düşük sonuçları listeleme\ncounties_selected %>%\ngroup_by(state) %>%\ntop_n(1, population) # her eyaletteki en yüksek nüfuslu yer\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 4\n# Groups:   state [50]\n   state       county                 population unemployment\n   <fct>       <fct>                       <dbl>        <dbl>\n 1 Alabama     Jefferson                  659026          9.1\n 2 Alaska      Anchorage Municipality     299107          6.7\n 3 Arizona     Maricopa                  4018143          7.7\n 4 Arkansas    Pulaski                    390463          7.5\n 5 California  Los Angeles              10038388         10  \n 6 Colorado    El Paso                    655024          8.4\n 7 Connecticut Fairfield                  939983          9  \n 8 Delaware    New Castle                 549643          7.4\n 9 Florida     Miami-Dade                2639042         10  \n10 Georgia     Fulton                     983903          9.9\n# ℹ 40 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\ncounties_selected %>%\ngroup_by(state) %>%\ntop_n(-1, population) # her eyaletteki en düşük nüfuslu yer\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 4\n# Groups:   state [50]\n   state       county                   population unemployment\n   <fct>       <fct>                         <dbl>        <dbl>\n 1 Alabama     Greene                         8697         20.4\n 2 Alaska      Yakutat City and Borough        643          7.9\n 3 Arizona     Greenlee                       9023         10  \n 4 Arkansas    Calhoun                        5245          7.2\n 5 California  Alpine                         1131         10.7\n 6 Colorado    San Juan                        606         13.8\n 7 Connecticut Windham                      117470          9.3\n 8 Delaware    Kent                         169509          8.4\n 9 Florida     Liberty                        8295         10.2\n10 Georgia     Taliaferro                     1721         12.1\n# ℹ 40 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\ncounties_selected %>%\ngroup_by(state) %>%\ntop_n(2, population) # her eyaletteki en yüksek nüfuslu 2 yer\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 100 × 4\n# Groups:   state [50]\n   state      county                       population unemployment\n   <fct>      <fct>                             <dbl>        <dbl>\n 1 Alabama    Jefferson                        659026          9.1\n 2 Alabama    Mobile                           414251          9.8\n 3 Alaska     Anchorage Municipality           299107          6.7\n 4 Alaska     Fairbanks North Star Borough      99705          7.9\n 5 Arizona    Maricopa                        4018143          7.7\n 6 Arizona    Pima                             998537         10  \n 7 Arkansas   Benton                           238198          4.2\n 8 Arkansas   Pulaski                          390463          7.5\n 9 California Los Angeles                    10038388         10  \n10 California San Diego                       3223096          8.7\n# ℹ 90 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# summarise_all bütün değişkenler için özetleme yapar\ncounties_selected %>% summarise_all(nlevels)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  state county population unemployment\n  <int>  <int>      <int>        <int>\n1    50   1847          0            0\n```\n\n\n:::\n\n```{.r .cell-code}\ncounties_selected %>% \n  select(-county) %>% \n  group_by(state) %>% \n  summarise_all(mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 3\n   state       population unemployment\n   <fct>            <dbl>        <dbl>\n 1 Alabama         72099.        11.3 \n 2 Alaska          25909.         9.19\n 3 Arizona        442795.        12.0 \n 4 Arkansas        39443.         8.98\n 5 California     662439.        10.8 \n 6 Colorado        82483.         7.46\n 7 Connecticut    449153.         8.16\n 8 Delaware       308818          7.93\n 9 Florida        293220.        10.4 \n10 Georgia         62935.         9.97\n# ℹ 40 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# summarise_at belli değişkenler için özetleme yapar\ncounties_selected %>% \n  select(-county) %>% \n  group_by(state) %>% \n  summarise_at(\"population\",mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 2\n   state       population\n   <fct>            <dbl>\n 1 Alabama         72099.\n 2 Alaska          25909.\n 3 Arizona        442795.\n 4 Arkansas        39443.\n 5 California     662439.\n 6 Colorado        82483.\n 7 Connecticut    449153.\n 8 Delaware       308818 \n 9 Florida        293220.\n10 Georgia         62935.\n# ℹ 40 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# summarise_if ile koşula göre özetleme yapar\ncounties_selected %>% \n  summarize_if(is.numeric, mean, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  population unemployment\n       <dbl>        <dbl>\n1    100652.         7.80\n```\n\n\n:::\n:::\n\n\n::: callout-caution\n### Dikkat\n\n**`ungroup()`** fonksiyonu, **`dplyr`** paketinde kullanılan bir işlevdir ve bir veri çerçevesini veya gruplanmış bir veri çerçevesini gruplardan çıkarmak için kullanılır. **`group_by()`** fonksiyonu ile gruplanmış bir veri çerçevesini oluşturduğunuzda, veri çerçevesi belirli sütunlar üzerinde gruplama yapar ve her grup için ayrı işlemler yapmanıza olanak tanır. Ancak bazen gruplamadan çıkmak ve orijinal veri çerçevesini elde etmek isteyebilirsiniz.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Örnek bir veri çerçevesi oluşturalım\nveri <- data.frame(\n  Sehir = c(\"İstanbul\", \"Ankara\", \"İstanbul\", \"Ankara\", \"İzmir\"),\n  Cinsiyet = c(\"Erkek\", \"Kadın\", \"Erkek\", \"Kadın\", \"Erkek\"),\n  Yas = c(28, 32, 22, 24, 30),\n  Puan = c(90, 85, 78, 92, 88)\n)\n\n# Şehir sütununa göre veriyi grupla\ngruplu_veri <- group_by(veri, Sehir)\ngruplu_veri |> summarise(mean(Puan))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  Sehir    `mean(Puan)`\n  <chr>           <dbl>\n1 Ankara           88.5\n2 İstanbul         84  \n3 İzmir            88  \n```\n\n\n:::\n\n```{.r .cell-code}\n# Grubu çıkarma\ngruplu_veri <- ungroup(gruplu_veri)\ngruplu_veri |> summarise(mean(Puan))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  `mean(Puan)`\n         <dbl>\n1         86.6\n```\n\n\n:::\n:::\n\n\nAynı veri setinde farklı sonuçlar elde edildiğine dikkat edelim. Eğer **`group_by`** ile oluşturulan veri setinde başka işlemler yapacaksanız öncesinde **`ungroup()`** yapmayı ihmal etmeyin.\n\n::: callout-note\n## Not\n\n**`group_by`** sadece `summarize` fonksiyonu ile değil `mutate`, `transmute` gibi diğer fonksiyonlar ile birlikte de kullanılabilir.\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}